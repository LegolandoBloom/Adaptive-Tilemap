                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _set_sprite_data
                                     13 	.globl _set_bkg_submap
                                     14 	.globl _set_bkg_data
                                     15 	.globl _joypad
                                     16 	.globl _delay
                                     17 	.globl _yLast_values
                                     18 	.globl _xLast_values
                                     19 	.globl _y_values
                                     20 	.globl _x_values
                                     21 	.globl _ceiling_coll
                                     22 	.globl _ground_coll
                                     23 	.globl _ySpeed
                                     24 	.globl _xSpeed
                                     25 	.globl _yLast
                                     26 	.globl _xLast
                                     27 	.globl _pY
                                     28 	.globl _pX
                                     29 	.globl _printcounter
                                     30 	.globl _testmap
                                     31 	.globl _bktiles
                                     32 	.globl _moveplayer
                                     33 	.globl _basicmove
                                     34 	.globl _collision
                                     35 ;--------------------------------------------------------
                                     36 ; special function registers
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area _DATA
                           000000    42 G$bktiles$0_0$0==.
      000000                         43 _bktiles::
      000000                         44 	.ds 96
                           000060    45 G$testmap$0_0$0==.
      000060                         46 _testmap::
      000060                         47 	.ds 360
                           0001C8    48 G$printcounter$0_0$0==.
      0001C8                         49 _printcounter::
      0001C8                         50 	.ds 2
                           0001CA    51 G$pX$0_0$0==.
      0001CA                         52 _pX::
      0001CA                         53 	.ds 1
                           0001CB    54 G$pY$0_0$0==.
      0001CB                         55 _pY::
      0001CB                         56 	.ds 1
                           0001CC    57 G$xLast$0_0$0==.
      0001CC                         58 _xLast::
      0001CC                         59 	.ds 1
                           0001CD    60 G$yLast$0_0$0==.
      0001CD                         61 _yLast::
      0001CD                         62 	.ds 1
                           0001CE    63 G$xSpeed$0_0$0==.
      0001CE                         64 _xSpeed::
      0001CE                         65 	.ds 1
                           0001CF    66 G$ySpeed$0_0$0==.
      0001CF                         67 _ySpeed::
      0001CF                         68 	.ds 1
                           0001D0    69 G$ground_coll$0_0$0==.
      0001D0                         70 _ground_coll::
      0001D0                         71 	.ds 1
                           0001D1    72 G$ceiling_coll$0_0$0==.
      0001D1                         73 _ceiling_coll::
      0001D1                         74 	.ds 1
                           0001D2    75 G$x_values$0_0$0==.
      0001D2                         76 _x_values::
      0001D2                         77 	.ds 2
                           0001D4    78 G$y_values$0_0$0==.
      0001D4                         79 _y_values::
      0001D4                         80 	.ds 5
                           0001D9    81 G$xLast_values$0_0$0==.
      0001D9                         82 _xLast_values::
      0001D9                         83 	.ds 2
                           0001DB    84 G$yLast_values$0_0$0==.
      0001DB                         85 _yLast_values::
      0001DB                         86 	.ds 5
                                     87 ;--------------------------------------------------------
                                     88 ; absolute external ram data
                                     89 ;--------------------------------------------------------
                                     90 	.area _DABS (ABS)
                                     91 ;--------------------------------------------------------
                                     92 ; global & static initialisations
                                     93 ;--------------------------------------------------------
                                     94 	.area _HOME
                                     95 	.area _GSINIT
                                     96 	.area _GSFINAL
                                     97 	.area _GSINIT
                           000000    98 	C$bktiles.c$26$1_0$138	= .
                                     99 	.globl	C$bktiles.c$26$1_0$138
                                    100 ;bktiles.c:26: unsigned char bktiles[] =
      000000 21r00r00               101 	ld	hl, #_bktiles
      000003 36 00                  102 	ld	(hl), #0x00
      000005 21r01r00               103 	ld	hl, #(_bktiles + 0x0001)
      000008 36 00                  104 	ld	(hl), #0x00
      00000A 21r02r00               105 	ld	hl, #(_bktiles + 0x0002)
      00000D 36 00                  106 	ld	(hl), #0x00
      00000F 21r03r00               107 	ld	hl, #(_bktiles + 0x0003)
      000012 36 00                  108 	ld	(hl), #0x00
      000014 21r04r00               109 	ld	hl, #(_bktiles + 0x0004)
      000017 36 00                  110 	ld	(hl), #0x00
      000019 21r05r00               111 	ld	hl, #(_bktiles + 0x0005)
      00001C 36 00                  112 	ld	(hl), #0x00
      00001E 21r06r00               113 	ld	hl, #(_bktiles + 0x0006)
      000021 36 00                  114 	ld	(hl), #0x00
      000023 21r07r00               115 	ld	hl, #(_bktiles + 0x0007)
      000026 36 00                  116 	ld	(hl), #0x00
      000028 21r08r00               117 	ld	hl, #(_bktiles + 0x0008)
      00002B 36 00                  118 	ld	(hl), #0x00
      00002D 21r09r00               119 	ld	hl, #(_bktiles + 0x0009)
      000030 36 00                  120 	ld	(hl), #0x00
      000032 21r0Ar00               121 	ld	hl, #(_bktiles + 0x000a)
      000035 36 00                  122 	ld	(hl), #0x00
      000037 21r0Br00               123 	ld	hl, #(_bktiles + 0x000b)
      00003A 36 00                  124 	ld	(hl), #0x00
      00003C 21r0Cr00               125 	ld	hl, #(_bktiles + 0x000c)
      00003F 36 00                  126 	ld	(hl), #0x00
      000041 21r0Dr00               127 	ld	hl, #(_bktiles + 0x000d)
      000044 36 00                  128 	ld	(hl), #0x00
      000046 21r0Er00               129 	ld	hl, #(_bktiles + 0x000e)
      000049 36 00                  130 	ld	(hl), #0x00
      00004B 21r0Fr00               131 	ld	hl, #(_bktiles + 0x000f)
      00004E 36 00                  132 	ld	(hl), #0x00
      000050 21r10r00               133 	ld	hl, #(_bktiles + 0x0010)
      000053 36 FF                  134 	ld	(hl), #0xff
      000055 21r11r00               135 	ld	hl, #(_bktiles + 0x0011)
      000058 36 FF                  136 	ld	(hl), #0xff
      00005A 21r12r00               137 	ld	hl, #(_bktiles + 0x0012)
      00005D 36 FF                  138 	ld	(hl), #0xff
      00005F 21r13r00               139 	ld	hl, #(_bktiles + 0x0013)
      000062 36 FF                  140 	ld	(hl), #0xff
      000064 21r14r00               141 	ld	hl, #(_bktiles + 0x0014)
      000067 36 FF                  142 	ld	(hl), #0xff
      000069 21r15r00               143 	ld	hl, #(_bktiles + 0x0015)
      00006C 36 FF                  144 	ld	(hl), #0xff
      00006E 21r16r00               145 	ld	hl, #(_bktiles + 0x0016)
      000071 36 FF                  146 	ld	(hl), #0xff
      000073 21r17r00               147 	ld	hl, #(_bktiles + 0x0017)
      000076 36 FF                  148 	ld	(hl), #0xff
      000078 21r18r00               149 	ld	hl, #(_bktiles + 0x0018)
      00007B 36 FF                  150 	ld	(hl), #0xff
      00007D 21r19r00               151 	ld	hl, #(_bktiles + 0x0019)
      000080 36 FF                  152 	ld	(hl), #0xff
      000082 21r1Ar00               153 	ld	hl, #(_bktiles + 0x001a)
      000085 36 FF                  154 	ld	(hl), #0xff
      000087 21r1Br00               155 	ld	hl, #(_bktiles + 0x001b)
      00008A 36 FF                  156 	ld	(hl), #0xff
      00008C 21r1Cr00               157 	ld	hl, #(_bktiles + 0x001c)
      00008F 36 FF                  158 	ld	(hl), #0xff
      000091 21r1Dr00               159 	ld	hl, #(_bktiles + 0x001d)
      000094 36 FF                  160 	ld	(hl), #0xff
      000096 21r1Er00               161 	ld	hl, #(_bktiles + 0x001e)
      000099 36 FF                  162 	ld	(hl), #0xff
      00009B 21r1Fr00               163 	ld	hl, #(_bktiles + 0x001f)
      00009E 36 FF                  164 	ld	(hl), #0xff
      0000A0 21r20r00               165 	ld	hl, #(_bktiles + 0x0020)
      0000A3 36 FF                  166 	ld	(hl), #0xff
      0000A5 21r21r00               167 	ld	hl, #(_bktiles + 0x0021)
      0000A8 36 FF                  168 	ld	(hl), #0xff
      0000AA 21r22r00               169 	ld	hl, #(_bktiles + 0x0022)
      0000AD 36 FF                  170 	ld	(hl), #0xff
      0000AF 21r23r00               171 	ld	hl, #(_bktiles + 0x0023)
      0000B2 36 FF                  172 	ld	(hl), #0xff
      0000B4 21r24r00               173 	ld	hl, #(_bktiles + 0x0024)
      0000B7 36 FF                  174 	ld	(hl), #0xff
      0000B9 21r25r00               175 	ld	hl, #(_bktiles + 0x0025)
      0000BC 36 00                  176 	ld	(hl), #0x00
      0000BE 21r26r00               177 	ld	hl, #(_bktiles + 0x0026)
      0000C1 36 FF                  178 	ld	(hl), #0xff
      0000C3 21r27r00               179 	ld	hl, #(_bktiles + 0x0027)
      0000C6 36 00                  180 	ld	(hl), #0x00
      0000C8 21r28r00               181 	ld	hl, #(_bktiles + 0x0028)
      0000CB 36 00                  182 	ld	(hl), #0x00
      0000CD 21r29r00               183 	ld	hl, #(_bktiles + 0x0029)
      0000D0 36 00                  184 	ld	(hl), #0x00
      0000D2 21r2Ar00               185 	ld	hl, #(_bktiles + 0x002a)
      0000D5 36 00                  186 	ld	(hl), #0x00
      0000D7 21r2Br00               187 	ld	hl, #(_bktiles + 0x002b)
      0000DA 36 00                  188 	ld	(hl), #0x00
      0000DC 21r2Cr00               189 	ld	hl, #(_bktiles + 0x002c)
      0000DF 36 00                  190 	ld	(hl), #0x00
      0000E1 21r2Dr00               191 	ld	hl, #(_bktiles + 0x002d)
      0000E4 36 00                  192 	ld	(hl), #0x00
      0000E6 21r2Er00               193 	ld	hl, #(_bktiles + 0x002e)
      0000E9 36 00                  194 	ld	(hl), #0x00
      0000EB 21r2Fr00               195 	ld	hl, #(_bktiles + 0x002f)
      0000EE 36 00                  196 	ld	(hl), #0x00
      0000F0 21r30r00               197 	ld	hl, #(_bktiles + 0x0030)
      0000F3 36 00                  198 	ld	(hl), #0x00
      0000F5 21r31r00               199 	ld	hl, #(_bktiles + 0x0031)
      0000F8 36 FF                  200 	ld	(hl), #0xff
      0000FA 21r32r00               201 	ld	hl, #(_bktiles + 0x0032)
      0000FD 36 00                  202 	ld	(hl), #0x00
      0000FF 21r33r00               203 	ld	hl, #(_bktiles + 0x0033)
      000102 36 FF                  204 	ld	(hl), #0xff
      000104 21r34r00               205 	ld	hl, #(_bktiles + 0x0034)
      000107 36 00                  206 	ld	(hl), #0x00
      000109 21r35r00               207 	ld	hl, #(_bktiles + 0x0035)
      00010C 36 FF                  208 	ld	(hl), #0xff
      00010E 21r36r00               209 	ld	hl, #(_bktiles + 0x0036)
      000111 36 00                  210 	ld	(hl), #0x00
      000113 21r37r00               211 	ld	hl, #(_bktiles + 0x0037)
      000116 36 FF                  212 	ld	(hl), #0xff
      000118 21r38r00               213 	ld	hl, #(_bktiles + 0x0038)
      00011B 36 00                  214 	ld	(hl), #0x00
      00011D 21r39r00               215 	ld	hl, #(_bktiles + 0x0039)
      000120 36 FF                  216 	ld	(hl), #0xff
      000122 21r3Ar00               217 	ld	hl, #(_bktiles + 0x003a)
      000125 36 00                  218 	ld	(hl), #0x00
      000127 21r3Br00               219 	ld	hl, #(_bktiles + 0x003b)
      00012A 36 FF                  220 	ld	(hl), #0xff
      00012C 21r3Cr00               221 	ld	hl, #(_bktiles + 0x003c)
      00012F 36 00                  222 	ld	(hl), #0x00
      000131 21r3Dr00               223 	ld	hl, #(_bktiles + 0x003d)
      000134 36 FF                  224 	ld	(hl), #0xff
      000136 21r3Er00               225 	ld	hl, #(_bktiles + 0x003e)
      000139 36 00                  226 	ld	(hl), #0x00
      00013B 21r3Fr00               227 	ld	hl, #(_bktiles + 0x003f)
      00013E 36 FF                  228 	ld	(hl), #0xff
      000140 21r40r00               229 	ld	hl, #(_bktiles + 0x0040)
      000143 36 03                  230 	ld	(hl), #0x03
      000145 21r41r00               231 	ld	hl, #(_bktiles + 0x0041)
      000148 36 03                  232 	ld	(hl), #0x03
      00014A 21r42r00               233 	ld	hl, #(_bktiles + 0x0042)
      00014D 36 03                  234 	ld	(hl), #0x03
      00014F 21r43r00               235 	ld	hl, #(_bktiles + 0x0043)
      000152 36 03                  236 	ld	(hl), #0x03
      000154 21r44r00               237 	ld	hl, #(_bktiles + 0x0044)
      000157 36 0F                  238 	ld	(hl), #0x0f
      000159 21r45r00               239 	ld	hl, #(_bktiles + 0x0045)
      00015C 36 0F                  240 	ld	(hl), #0x0f
      00015E 21r46r00               241 	ld	hl, #(_bktiles + 0x0046)
      000161 36 0F                  242 	ld	(hl), #0x0f
      000163 21r47r00               243 	ld	hl, #(_bktiles + 0x0047)
      000166 36 0F                  244 	ld	(hl), #0x0f
      000168 21r48r00               245 	ld	hl, #(_bktiles + 0x0048)
      00016B 36 3F                  246 	ld	(hl), #0x3f
      00016D 21r49r00               247 	ld	hl, #(_bktiles + 0x0049)
      000170 36 3F                  248 	ld	(hl), #0x3f
      000172 21r4Ar00               249 	ld	hl, #(_bktiles + 0x004a)
      000175 36 3F                  250 	ld	(hl), #0x3f
      000177 21r4Br00               251 	ld	hl, #(_bktiles + 0x004b)
      00017A 36 3F                  252 	ld	(hl), #0x3f
      00017C 21r4Cr00               253 	ld	hl, #(_bktiles + 0x004c)
      00017F 36 FF                  254 	ld	(hl), #0xff
      000181 21r4Dr00               255 	ld	hl, #(_bktiles + 0x004d)
      000184 36 FF                  256 	ld	(hl), #0xff
      000186 21r4Er00               257 	ld	hl, #(_bktiles + 0x004e)
      000189 36 FF                  258 	ld	(hl), #0xff
      00018B 21r4Fr00               259 	ld	hl, #(_bktiles + 0x004f)
      00018E 36 FF                  260 	ld	(hl), #0xff
      000190 21r50r00               261 	ld	hl, #(_bktiles + 0x0050)
      000193 36 C0                  262 	ld	(hl), #0xc0
      000195 21r51r00               263 	ld	hl, #(_bktiles + 0x0051)
      000198 36 C0                  264 	ld	(hl), #0xc0
      00019A 21r52r00               265 	ld	hl, #(_bktiles + 0x0052)
      00019D 36 C0                  266 	ld	(hl), #0xc0
      00019F 21r53r00               267 	ld	hl, #(_bktiles + 0x0053)
      0001A2 36 C0                  268 	ld	(hl), #0xc0
      0001A4 21r54r00               269 	ld	hl, #(_bktiles + 0x0054)
      0001A7 36 F0                  270 	ld	(hl), #0xf0
      0001A9 21r55r00               271 	ld	hl, #(_bktiles + 0x0055)
      0001AC 36 F0                  272 	ld	(hl), #0xf0
      0001AE 21r56r00               273 	ld	hl, #(_bktiles + 0x0056)
      0001B1 36 F0                  274 	ld	(hl), #0xf0
      0001B3 21r57r00               275 	ld	hl, #(_bktiles + 0x0057)
      0001B6 36 F0                  276 	ld	(hl), #0xf0
      0001B8 21r58r00               277 	ld	hl, #(_bktiles + 0x0058)
      0001BB 36 FC                  278 	ld	(hl), #0xfc
      0001BD 21r59r00               279 	ld	hl, #(_bktiles + 0x0059)
      0001C0 36 FC                  280 	ld	(hl), #0xfc
      0001C2 21r5Ar00               281 	ld	hl, #(_bktiles + 0x005a)
      0001C5 36 FC                  282 	ld	(hl), #0xfc
      0001C7 21r5Br00               283 	ld	hl, #(_bktiles + 0x005b)
      0001CA 36 FC                  284 	ld	(hl), #0xfc
      0001CC 21r5Cr00               285 	ld	hl, #(_bktiles + 0x005c)
      0001CF 36 FF                  286 	ld	(hl), #0xff
      0001D1 21r5Dr00               287 	ld	hl, #(_bktiles + 0x005d)
      0001D4 36 FF                  288 	ld	(hl), #0xff
      0001D6 21r5Er00               289 	ld	hl, #(_bktiles + 0x005e)
      0001D9 36 FF                  290 	ld	(hl), #0xff
      0001DB 21r5Fr00               291 	ld	hl, #(_bktiles + 0x005f)
      0001DE 36 FF                  292 	ld	(hl), #0xff
                           0001E0   293 	C$testmap.c$25$1_0$138	= .
                                    294 	.globl	C$testmap.c$25$1_0$138
                                    295 ;testmap.c:25: unsigned char testmap[] =
      0001E0 21r60r00               296 	ld	hl, #_testmap
      0001E3 36 00                  297 	ld	(hl), #0x00
      0001E5 21r61r00               298 	ld	hl, #(_testmap + 0x0001)
      0001E8 36 00                  299 	ld	(hl), #0x00
      0001EA 21r62r00               300 	ld	hl, #(_testmap + 0x0002)
      0001ED 36 00                  301 	ld	(hl), #0x00
      0001EF 21r63r00               302 	ld	hl, #(_testmap + 0x0003)
      0001F2 36 00                  303 	ld	(hl), #0x00
      0001F4 21r64r00               304 	ld	hl, #(_testmap + 0x0004)
      0001F7 36 00                  305 	ld	(hl), #0x00
      0001F9 21r65r00               306 	ld	hl, #(_testmap + 0x0005)
      0001FC 36 00                  307 	ld	(hl), #0x00
      0001FE 21r66r00               308 	ld	hl, #(_testmap + 0x0006)
      000201 36 00                  309 	ld	(hl), #0x00
      000203 21r67r00               310 	ld	hl, #(_testmap + 0x0007)
      000206 36 00                  311 	ld	(hl), #0x00
      000208 21r68r00               312 	ld	hl, #(_testmap + 0x0008)
      00020B 36 00                  313 	ld	(hl), #0x00
      00020D 21r69r00               314 	ld	hl, #(_testmap + 0x0009)
      000210 36 00                  315 	ld	(hl), #0x00
      000212 21r6Ar00               316 	ld	hl, #(_testmap + 0x000a)
      000215 36 00                  317 	ld	(hl), #0x00
      000217 21r6Br00               318 	ld	hl, #(_testmap + 0x000b)
      00021A 36 00                  319 	ld	(hl), #0x00
      00021C 21r6Cr00               320 	ld	hl, #(_testmap + 0x000c)
      00021F 36 00                  321 	ld	(hl), #0x00
      000221 21r6Dr00               322 	ld	hl, #(_testmap + 0x000d)
      000224 36 00                  323 	ld	(hl), #0x00
      000226 21r6Er00               324 	ld	hl, #(_testmap + 0x000e)
      000229 36 00                  325 	ld	(hl), #0x00
      00022B 21r6Fr00               326 	ld	hl, #(_testmap + 0x000f)
      00022E 36 00                  327 	ld	(hl), #0x00
      000230 21r70r00               328 	ld	hl, #(_testmap + 0x0010)
      000233 36 00                  329 	ld	(hl), #0x00
      000235 21r71r00               330 	ld	hl, #(_testmap + 0x0011)
      000238 36 00                  331 	ld	(hl), #0x00
      00023A 21r72r00               332 	ld	hl, #(_testmap + 0x0012)
      00023D 36 00                  333 	ld	(hl), #0x00
      00023F 21r73r00               334 	ld	hl, #(_testmap + 0x0013)
      000242 36 00                  335 	ld	(hl), #0x00
      000244 21r74r00               336 	ld	hl, #(_testmap + 0x0014)
      000247 36 00                  337 	ld	(hl), #0x00
      000249 21r75r00               338 	ld	hl, #(_testmap + 0x0015)
      00024C 36 00                  339 	ld	(hl), #0x00
      00024E 21r76r00               340 	ld	hl, #(_testmap + 0x0016)
      000251 36 00                  341 	ld	(hl), #0x00
      000253 21r77r00               342 	ld	hl, #(_testmap + 0x0017)
      000256 36 00                  343 	ld	(hl), #0x00
      000258 21r78r00               344 	ld	hl, #(_testmap + 0x0018)
      00025B 36 00                  345 	ld	(hl), #0x00
      00025D 21r79r00               346 	ld	hl, #(_testmap + 0x0019)
      000260 36 00                  347 	ld	(hl), #0x00
      000262 21r7Ar00               348 	ld	hl, #(_testmap + 0x001a)
      000265 36 00                  349 	ld	(hl), #0x00
      000267 21r7Br00               350 	ld	hl, #(_testmap + 0x001b)
      00026A 36 00                  351 	ld	(hl), #0x00
      00026C 21r7Cr00               352 	ld	hl, #(_testmap + 0x001c)
      00026F 36 00                  353 	ld	(hl), #0x00
      000271 21r7Dr00               354 	ld	hl, #(_testmap + 0x001d)
      000274 36 00                  355 	ld	(hl), #0x00
      000276 21r7Er00               356 	ld	hl, #(_testmap + 0x001e)
      000279 36 00                  357 	ld	(hl), #0x00
      00027B 21r7Fr00               358 	ld	hl, #(_testmap + 0x001f)
      00027E 36 00                  359 	ld	(hl), #0x00
      000280 21r80r00               360 	ld	hl, #(_testmap + 0x0020)
      000283 36 00                  361 	ld	(hl), #0x00
      000285 21r81r00               362 	ld	hl, #(_testmap + 0x0021)
      000288 36 00                  363 	ld	(hl), #0x00
      00028A 21r82r00               364 	ld	hl, #(_testmap + 0x0022)
      00028D 36 00                  365 	ld	(hl), #0x00
      00028F 21r83r00               366 	ld	hl, #(_testmap + 0x0023)
      000292 36 00                  367 	ld	(hl), #0x00
      000294 21r84r00               368 	ld	hl, #(_testmap + 0x0024)
      000297 36 00                  369 	ld	(hl), #0x00
      000299 21r85r00               370 	ld	hl, #(_testmap + 0x0025)
      00029C 36 00                  371 	ld	(hl), #0x00
      00029E 21r86r00               372 	ld	hl, #(_testmap + 0x0026)
      0002A1 36 00                  373 	ld	(hl), #0x00
      0002A3 21r87r00               374 	ld	hl, #(_testmap + 0x0027)
      0002A6 36 00                  375 	ld	(hl), #0x00
      0002A8 21r88r00               376 	ld	hl, #(_testmap + 0x0028)
      0002AB 36 00                  377 	ld	(hl), #0x00
      0002AD 21r89r00               378 	ld	hl, #(_testmap + 0x0029)
      0002B0 36 00                  379 	ld	(hl), #0x00
      0002B2 21r8Ar00               380 	ld	hl, #(_testmap + 0x002a)
      0002B5 36 00                  381 	ld	(hl), #0x00
      0002B7 21r8Br00               382 	ld	hl, #(_testmap + 0x002b)
      0002BA 36 00                  383 	ld	(hl), #0x00
      0002BC 21r8Cr00               384 	ld	hl, #(_testmap + 0x002c)
      0002BF 36 00                  385 	ld	(hl), #0x00
      0002C1 21r8Dr00               386 	ld	hl, #(_testmap + 0x002d)
      0002C4 36 00                  387 	ld	(hl), #0x00
      0002C6 21r8Er00               388 	ld	hl, #(_testmap + 0x002e)
      0002C9 36 00                  389 	ld	(hl), #0x00
      0002CB 21r8Fr00               390 	ld	hl, #(_testmap + 0x002f)
      0002CE 36 00                  391 	ld	(hl), #0x00
      0002D0 21r90r00               392 	ld	hl, #(_testmap + 0x0030)
      0002D3 36 00                  393 	ld	(hl), #0x00
      0002D5 21r91r00               394 	ld	hl, #(_testmap + 0x0031)
      0002D8 36 00                  395 	ld	(hl), #0x00
      0002DA 21r92r00               396 	ld	hl, #(_testmap + 0x0032)
      0002DD 36 00                  397 	ld	(hl), #0x00
      0002DF 21r93r00               398 	ld	hl, #(_testmap + 0x0033)
      0002E2 36 00                  399 	ld	(hl), #0x00
      0002E4 21r94r00               400 	ld	hl, #(_testmap + 0x0034)
      0002E7 36 00                  401 	ld	(hl), #0x00
      0002E9 21r95r00               402 	ld	hl, #(_testmap + 0x0035)
      0002EC 36 00                  403 	ld	(hl), #0x00
      0002EE 21r96r00               404 	ld	hl, #(_testmap + 0x0036)
      0002F1 36 03                  405 	ld	(hl), #0x03
      0002F3 21r97r00               406 	ld	hl, #(_testmap + 0x0037)
      0002F6 36 03                  407 	ld	(hl), #0x03
      0002F8 21r98r00               408 	ld	hl, #(_testmap + 0x0038)
      0002FB 36 03                  409 	ld	(hl), #0x03
      0002FD 21r99r00               410 	ld	hl, #(_testmap + 0x0039)
      000300 36 03                  411 	ld	(hl), #0x03
      000302 21r9Ar00               412 	ld	hl, #(_testmap + 0x003a)
      000305 36 03                  413 	ld	(hl), #0x03
      000307 21r9Br00               414 	ld	hl, #(_testmap + 0x003b)
      00030A 36 00                  415 	ld	(hl), #0x00
      00030C 21r9Cr00               416 	ld	hl, #(_testmap + 0x003c)
      00030F 36 00                  417 	ld	(hl), #0x00
      000311 21r9Dr00               418 	ld	hl, #(_testmap + 0x003d)
      000314 36 00                  419 	ld	(hl), #0x00
      000316 21r9Er00               420 	ld	hl, #(_testmap + 0x003e)
      000319 36 00                  421 	ld	(hl), #0x00
      00031B 21r9Fr00               422 	ld	hl, #(_testmap + 0x003f)
      00031E 36 00                  423 	ld	(hl), #0x00
      000320 21rA0r00               424 	ld	hl, #(_testmap + 0x0040)
      000323 36 00                  425 	ld	(hl), #0x00
      000325 21rA1r00               426 	ld	hl, #(_testmap + 0x0041)
      000328 36 00                  427 	ld	(hl), #0x00
      00032A 21rA2r00               428 	ld	hl, #(_testmap + 0x0042)
      00032D 36 00                  429 	ld	(hl), #0x00
      00032F 21rA3r00               430 	ld	hl, #(_testmap + 0x0043)
      000332 36 00                  431 	ld	(hl), #0x00
      000334 21rA4r00               432 	ld	hl, #(_testmap + 0x0044)
      000337 36 00                  433 	ld	(hl), #0x00
      000339 21rA5r00               434 	ld	hl, #(_testmap + 0x0045)
      00033C 36 00                  435 	ld	(hl), #0x00
      00033E 21rA6r00               436 	ld	hl, #(_testmap + 0x0046)
      000341 36 00                  437 	ld	(hl), #0x00
      000343 21rA7r00               438 	ld	hl, #(_testmap + 0x0047)
      000346 36 00                  439 	ld	(hl), #0x00
      000348 21rA8r00               440 	ld	hl, #(_testmap + 0x0048)
      00034B 36 00                  441 	ld	(hl), #0x00
      00034D 21rA9r00               442 	ld	hl, #(_testmap + 0x0049)
      000350 36 00                  443 	ld	(hl), #0x00
      000352 21rAAr00               444 	ld	hl, #(_testmap + 0x004a)
      000355 36 03                  445 	ld	(hl), #0x03
      000357 21rABr00               446 	ld	hl, #(_testmap + 0x004b)
      00035A 36 03                  447 	ld	(hl), #0x03
      00035C 21rACr00               448 	ld	hl, #(_testmap + 0x004c)
      00035F 36 03                  449 	ld	(hl), #0x03
      000361 21rADr00               450 	ld	hl, #(_testmap + 0x004d)
      000364 36 03                  451 	ld	(hl), #0x03
      000366 21rAEr00               452 	ld	hl, #(_testmap + 0x004e)
      000369 36 03                  453 	ld	(hl), #0x03
      00036B 21rAFr00               454 	ld	hl, #(_testmap + 0x004f)
      00036E 36 00                  455 	ld	(hl), #0x00
      000370 21rB0r00               456 	ld	hl, #(_testmap + 0x0050)
      000373 36 00                  457 	ld	(hl), #0x00
      000375 21rB1r00               458 	ld	hl, #(_testmap + 0x0051)
      000378 36 00                  459 	ld	(hl), #0x00
      00037A 21rB2r00               460 	ld	hl, #(_testmap + 0x0052)
      00037D 36 00                  461 	ld	(hl), #0x00
      00037F 21rB3r00               462 	ld	hl, #(_testmap + 0x0053)
      000382 36 00                  463 	ld	(hl), #0x00
      000384 21rB4r00               464 	ld	hl, #(_testmap + 0x0054)
      000387 36 00                  465 	ld	(hl), #0x00
      000389 21rB5r00               466 	ld	hl, #(_testmap + 0x0055)
      00038C 36 00                  467 	ld	(hl), #0x00
      00038E 21rB6r00               468 	ld	hl, #(_testmap + 0x0056)
      000391 36 00                  469 	ld	(hl), #0x00
      000393 21rB7r00               470 	ld	hl, #(_testmap + 0x0057)
      000396 36 00                  471 	ld	(hl), #0x00
      000398 21rB8r00               472 	ld	hl, #(_testmap + 0x0058)
      00039B 36 00                  473 	ld	(hl), #0x00
      00039D 21rB9r00               474 	ld	hl, #(_testmap + 0x0059)
      0003A0 36 00                  475 	ld	(hl), #0x00
      0003A2 21rBAr00               476 	ld	hl, #(_testmap + 0x005a)
      0003A5 36 00                  477 	ld	(hl), #0x00
      0003A7 21rBBr00               478 	ld	hl, #(_testmap + 0x005b)
      0003AA 36 00                  479 	ld	(hl), #0x00
      0003AC 21rBCr00               480 	ld	hl, #(_testmap + 0x005c)
      0003AF 36 00                  481 	ld	(hl), #0x00
      0003B1 21rBDr00               482 	ld	hl, #(_testmap + 0x005d)
      0003B4 36 00                  483 	ld	(hl), #0x00
      0003B6 21rBEr00               484 	ld	hl, #(_testmap + 0x005e)
      0003B9 36 03                  485 	ld	(hl), #0x03
      0003BB 21rBFr00               486 	ld	hl, #(_testmap + 0x005f)
      0003BE 36 03                  487 	ld	(hl), #0x03
      0003C0 21rC0r00               488 	ld	hl, #(_testmap + 0x0060)
      0003C3 36 03                  489 	ld	(hl), #0x03
      0003C5 21rC1r00               490 	ld	hl, #(_testmap + 0x0061)
      0003C8 36 03                  491 	ld	(hl), #0x03
      0003CA 21rC2r00               492 	ld	hl, #(_testmap + 0x0062)
      0003CD 36 03                  493 	ld	(hl), #0x03
      0003CF 21rC3r00               494 	ld	hl, #(_testmap + 0x0063)
      0003D2 36 00                  495 	ld	(hl), #0x00
      0003D4 21rC4r00               496 	ld	hl, #(_testmap + 0x0064)
      0003D7 36 00                  497 	ld	(hl), #0x00
      0003D9 21rC5r00               498 	ld	hl, #(_testmap + 0x0065)
      0003DC 36 00                  499 	ld	(hl), #0x00
      0003DE 21rC6r00               500 	ld	hl, #(_testmap + 0x0066)
      0003E1 36 00                  501 	ld	(hl), #0x00
      0003E3 21rC7r00               502 	ld	hl, #(_testmap + 0x0067)
      0003E6 36 00                  503 	ld	(hl), #0x00
      0003E8 21rC8r00               504 	ld	hl, #(_testmap + 0x0068)
      0003EB 36 00                  505 	ld	(hl), #0x00
      0003ED 21rC9r00               506 	ld	hl, #(_testmap + 0x0069)
      0003F0 36 00                  507 	ld	(hl), #0x00
      0003F2 21rCAr00               508 	ld	hl, #(_testmap + 0x006a)
      0003F5 36 00                  509 	ld	(hl), #0x00
      0003F7 21rCBr00               510 	ld	hl, #(_testmap + 0x006b)
      0003FA 36 00                  511 	ld	(hl), #0x00
      0003FC 21rCCr00               512 	ld	hl, #(_testmap + 0x006c)
      0003FF 36 00                  513 	ld	(hl), #0x00
      000401 21rCDr00               514 	ld	hl, #(_testmap + 0x006d)
      000404 36 00                  515 	ld	(hl), #0x00
      000406 21rCEr00               516 	ld	hl, #(_testmap + 0x006e)
      000409 36 00                  517 	ld	(hl), #0x00
      00040B 21rCFr00               518 	ld	hl, #(_testmap + 0x006f)
      00040E 36 00                  519 	ld	(hl), #0x00
      000410 21rD0r00               520 	ld	hl, #(_testmap + 0x0070)
      000413 36 00                  521 	ld	(hl), #0x00
      000415 21rD1r00               522 	ld	hl, #(_testmap + 0x0071)
      000418 36 00                  523 	ld	(hl), #0x00
      00041A 21rD2r00               524 	ld	hl, #(_testmap + 0x0072)
      00041D 36 03                  525 	ld	(hl), #0x03
      00041F 21rD3r00               526 	ld	hl, #(_testmap + 0x0073)
      000422 36 03                  527 	ld	(hl), #0x03
      000424 21rD4r00               528 	ld	hl, #(_testmap + 0x0074)
      000427 36 03                  529 	ld	(hl), #0x03
      000429 21rD5r00               530 	ld	hl, #(_testmap + 0x0075)
      00042C 36 03                  531 	ld	(hl), #0x03
      00042E 21rD6r00               532 	ld	hl, #(_testmap + 0x0076)
      000431 36 03                  533 	ld	(hl), #0x03
      000433 21rD7r00               534 	ld	hl, #(_testmap + 0x0077)
      000436 36 00                  535 	ld	(hl), #0x00
      000438 21rD8r00               536 	ld	hl, #(_testmap + 0x0078)
      00043B 36 00                  537 	ld	(hl), #0x00
      00043D 21rD9r00               538 	ld	hl, #(_testmap + 0x0079)
      000440 36 00                  539 	ld	(hl), #0x00
      000442 21rDAr00               540 	ld	hl, #(_testmap + 0x007a)
      000445 36 00                  541 	ld	(hl), #0x00
      000447 21rDBr00               542 	ld	hl, #(_testmap + 0x007b)
      00044A 36 00                  543 	ld	(hl), #0x00
      00044C 21rDCr00               544 	ld	hl, #(_testmap + 0x007c)
      00044F 36 00                  545 	ld	(hl), #0x00
      000451 21rDDr00               546 	ld	hl, #(_testmap + 0x007d)
      000454 36 00                  547 	ld	(hl), #0x00
      000456 21rDEr00               548 	ld	hl, #(_testmap + 0x007e)
      000459 36 00                  549 	ld	(hl), #0x00
      00045B 21rDFr00               550 	ld	hl, #(_testmap + 0x007f)
      00045E 36 00                  551 	ld	(hl), #0x00
      000460 21rE0r00               552 	ld	hl, #(_testmap + 0x0080)
      000463 36 00                  553 	ld	(hl), #0x00
      000465 21rE1r00               554 	ld	hl, #(_testmap + 0x0081)
      000468 36 00                  555 	ld	(hl), #0x00
      00046A 21rE2r00               556 	ld	hl, #(_testmap + 0x0082)
      00046D 36 00                  557 	ld	(hl), #0x00
      00046F 21rE3r00               558 	ld	hl, #(_testmap + 0x0083)
      000472 36 00                  559 	ld	(hl), #0x00
      000474 21rE4r00               560 	ld	hl, #(_testmap + 0x0084)
      000477 36 00                  561 	ld	(hl), #0x00
      000479 21rE5r00               562 	ld	hl, #(_testmap + 0x0085)
      00047C 36 00                  563 	ld	(hl), #0x00
      00047E 21rE6r00               564 	ld	hl, #(_testmap + 0x0086)
      000481 36 03                  565 	ld	(hl), #0x03
      000483 21rE7r00               566 	ld	hl, #(_testmap + 0x0087)
      000486 36 03                  567 	ld	(hl), #0x03
      000488 21rE8r00               568 	ld	hl, #(_testmap + 0x0088)
      00048B 36 03                  569 	ld	(hl), #0x03
      00048D 21rE9r00               570 	ld	hl, #(_testmap + 0x0089)
      000490 36 03                  571 	ld	(hl), #0x03
      000492 21rEAr00               572 	ld	hl, #(_testmap + 0x008a)
      000495 36 03                  573 	ld	(hl), #0x03
      000497 21rEBr00               574 	ld	hl, #(_testmap + 0x008b)
      00049A 36 00                  575 	ld	(hl), #0x00
      00049C 21rECr00               576 	ld	hl, #(_testmap + 0x008c)
      00049F 36 00                  577 	ld	(hl), #0x00
      0004A1 21rEDr00               578 	ld	hl, #(_testmap + 0x008d)
      0004A4 36 00                  579 	ld	(hl), #0x00
      0004A6 21rEEr00               580 	ld	hl, #(_testmap + 0x008e)
      0004A9 36 00                  581 	ld	(hl), #0x00
      0004AB 21rEFr00               582 	ld	hl, #(_testmap + 0x008f)
      0004AE 36 00                  583 	ld	(hl), #0x00
      0004B0 21rF0r00               584 	ld	hl, #(_testmap + 0x0090)
      0004B3 36 00                  585 	ld	(hl), #0x00
      0004B5 21rF1r00               586 	ld	hl, #(_testmap + 0x0091)
      0004B8 36 00                  587 	ld	(hl), #0x00
      0004BA 21rF2r00               588 	ld	hl, #(_testmap + 0x0092)
      0004BD 36 00                  589 	ld	(hl), #0x00
      0004BF 21rF3r00               590 	ld	hl, #(_testmap + 0x0093)
      0004C2 36 00                  591 	ld	(hl), #0x00
      0004C4 21rF4r00               592 	ld	hl, #(_testmap + 0x0094)
      0004C7 36 00                  593 	ld	(hl), #0x00
      0004C9 21rF5r00               594 	ld	hl, #(_testmap + 0x0095)
      0004CC 36 00                  595 	ld	(hl), #0x00
      0004CE 21rF6r00               596 	ld	hl, #(_testmap + 0x0096)
      0004D1 36 00                  597 	ld	(hl), #0x00
      0004D3 21rF7r00               598 	ld	hl, #(_testmap + 0x0097)
      0004D6 36 00                  599 	ld	(hl), #0x00
      0004D8 21rF8r00               600 	ld	hl, #(_testmap + 0x0098)
      0004DB 36 00                  601 	ld	(hl), #0x00
      0004DD 21rF9r00               602 	ld	hl, #(_testmap + 0x0099)
      0004E0 36 00                  603 	ld	(hl), #0x00
      0004E2 21rFAr00               604 	ld	hl, #(_testmap + 0x009a)
      0004E5 36 03                  605 	ld	(hl), #0x03
      0004E7 21rFBr00               606 	ld	hl, #(_testmap + 0x009b)
      0004EA 36 03                  607 	ld	(hl), #0x03
      0004EC 21rFCr00               608 	ld	hl, #(_testmap + 0x009c)
      0004EF 36 03                  609 	ld	(hl), #0x03
      0004F1 21rFDr00               610 	ld	hl, #(_testmap + 0x009d)
      0004F4 36 03                  611 	ld	(hl), #0x03
      0004F6 21rFEr00               612 	ld	hl, #(_testmap + 0x009e)
      0004F9 36 03                  613 	ld	(hl), #0x03
      0004FB 21rFFr00               614 	ld	hl, #(_testmap + 0x009f)
      0004FE 36 00                  615 	ld	(hl), #0x00
      000500 21r00r01               616 	ld	hl, #(_testmap + 0x00a0)
      000503 36 00                  617 	ld	(hl), #0x00
      000505 21r01r01               618 	ld	hl, #(_testmap + 0x00a1)
      000508 36 00                  619 	ld	(hl), #0x00
      00050A 21r02r01               620 	ld	hl, #(_testmap + 0x00a2)
      00050D 36 00                  621 	ld	(hl), #0x00
      00050F 21r03r01               622 	ld	hl, #(_testmap + 0x00a3)
      000512 36 00                  623 	ld	(hl), #0x00
      000514 21r04r01               624 	ld	hl, #(_testmap + 0x00a4)
      000517 36 00                  625 	ld	(hl), #0x00
      000519 21r05r01               626 	ld	hl, #(_testmap + 0x00a5)
      00051C 36 00                  627 	ld	(hl), #0x00
      00051E 21r06r01               628 	ld	hl, #(_testmap + 0x00a6)
      000521 36 00                  629 	ld	(hl), #0x00
      000523 21r07r01               630 	ld	hl, #(_testmap + 0x00a7)
      000526 36 00                  631 	ld	(hl), #0x00
      000528 21r08r01               632 	ld	hl, #(_testmap + 0x00a8)
      00052B 36 00                  633 	ld	(hl), #0x00
      00052D 21r09r01               634 	ld	hl, #(_testmap + 0x00a9)
      000530 36 00                  635 	ld	(hl), #0x00
      000532 21r0Ar01               636 	ld	hl, #(_testmap + 0x00aa)
      000535 36 00                  637 	ld	(hl), #0x00
      000537 21r0Br01               638 	ld	hl, #(_testmap + 0x00ab)
      00053A 36 00                  639 	ld	(hl), #0x00
      00053C 21r0Cr01               640 	ld	hl, #(_testmap + 0x00ac)
      00053F 36 00                  641 	ld	(hl), #0x00
      000541 21r0Dr01               642 	ld	hl, #(_testmap + 0x00ad)
      000544 36 00                  643 	ld	(hl), #0x00
      000546 21r0Er01               644 	ld	hl, #(_testmap + 0x00ae)
      000549 36 00                  645 	ld	(hl), #0x00
      00054B 21r0Fr01               646 	ld	hl, #(_testmap + 0x00af)
      00054E 36 00                  647 	ld	(hl), #0x00
      000550 21r10r01               648 	ld	hl, #(_testmap + 0x00b0)
      000553 36 00                  649 	ld	(hl), #0x00
      000555 21r11r01               650 	ld	hl, #(_testmap + 0x00b1)
      000558 36 00                  651 	ld	(hl), #0x00
      00055A 21r12r01               652 	ld	hl, #(_testmap + 0x00b2)
      00055D 36 00                  653 	ld	(hl), #0x00
      00055F 21r13r01               654 	ld	hl, #(_testmap + 0x00b3)
      000562 36 00                  655 	ld	(hl), #0x00
      000564 21r14r01               656 	ld	hl, #(_testmap + 0x00b4)
      000567 36 00                  657 	ld	(hl), #0x00
      000569 21r15r01               658 	ld	hl, #(_testmap + 0x00b5)
      00056C 36 00                  659 	ld	(hl), #0x00
      00056E 21r16r01               660 	ld	hl, #(_testmap + 0x00b6)
      000571 36 00                  661 	ld	(hl), #0x00
      000573 21r17r01               662 	ld	hl, #(_testmap + 0x00b7)
      000576 36 00                  663 	ld	(hl), #0x00
      000578 21r18r01               664 	ld	hl, #(_testmap + 0x00b8)
      00057B 36 00                  665 	ld	(hl), #0x00
      00057D 21r19r01               666 	ld	hl, #(_testmap + 0x00b9)
      000580 36 00                  667 	ld	(hl), #0x00
      000582 21r1Ar01               668 	ld	hl, #(_testmap + 0x00ba)
      000585 36 00                  669 	ld	(hl), #0x00
      000587 21r1Br01               670 	ld	hl, #(_testmap + 0x00bb)
      00058A 36 00                  671 	ld	(hl), #0x00
      00058C 21r1Cr01               672 	ld	hl, #(_testmap + 0x00bc)
      00058F 36 00                  673 	ld	(hl), #0x00
      000591 21r1Dr01               674 	ld	hl, #(_testmap + 0x00bd)
      000594 36 00                  675 	ld	(hl), #0x00
      000596 21r1Er01               676 	ld	hl, #(_testmap + 0x00be)
      000599 36 00                  677 	ld	(hl), #0x00
      00059B 21r1Fr01               678 	ld	hl, #(_testmap + 0x00bf)
      00059E 36 00                  679 	ld	(hl), #0x00
      0005A0 21r20r01               680 	ld	hl, #(_testmap + 0x00c0)
      0005A3 36 00                  681 	ld	(hl), #0x00
      0005A5 21r21r01               682 	ld	hl, #(_testmap + 0x00c1)
      0005A8 36 00                  683 	ld	(hl), #0x00
      0005AA 21r22r01               684 	ld	hl, #(_testmap + 0x00c2)
      0005AD 36 00                  685 	ld	(hl), #0x00
      0005AF 21r23r01               686 	ld	hl, #(_testmap + 0x00c3)
      0005B2 36 00                  687 	ld	(hl), #0x00
      0005B4 21r24r01               688 	ld	hl, #(_testmap + 0x00c4)
      0005B7 36 00                  689 	ld	(hl), #0x00
      0005B9 21r25r01               690 	ld	hl, #(_testmap + 0x00c5)
      0005BC 36 00                  691 	ld	(hl), #0x00
      0005BE 21r26r01               692 	ld	hl, #(_testmap + 0x00c6)
      0005C1 36 00                  693 	ld	(hl), #0x00
      0005C3 21r27r01               694 	ld	hl, #(_testmap + 0x00c7)
      0005C6 36 00                  695 	ld	(hl), #0x00
      0005C8 21r28r01               696 	ld	hl, #(_testmap + 0x00c8)
      0005CB 36 00                  697 	ld	(hl), #0x00
      0005CD 21r29r01               698 	ld	hl, #(_testmap + 0x00c9)
      0005D0 36 00                  699 	ld	(hl), #0x00
      0005D2 21r2Ar01               700 	ld	hl, #(_testmap + 0x00ca)
      0005D5 36 00                  701 	ld	(hl), #0x00
      0005D7 21r2Br01               702 	ld	hl, #(_testmap + 0x00cb)
      0005DA 36 00                  703 	ld	(hl), #0x00
      0005DC 21r2Cr01               704 	ld	hl, #(_testmap + 0x00cc)
      0005DF 36 00                  705 	ld	(hl), #0x00
      0005E1 21r2Dr01               706 	ld	hl, #(_testmap + 0x00cd)
      0005E4 36 00                  707 	ld	(hl), #0x00
      0005E6 21r2Er01               708 	ld	hl, #(_testmap + 0x00ce)
      0005E9 36 00                  709 	ld	(hl), #0x00
      0005EB 21r2Fr01               710 	ld	hl, #(_testmap + 0x00cf)
      0005EE 36 00                  711 	ld	(hl), #0x00
      0005F0 21r30r01               712 	ld	hl, #(_testmap + 0x00d0)
      0005F3 36 00                  713 	ld	(hl), #0x00
      0005F5 21r31r01               714 	ld	hl, #(_testmap + 0x00d1)
      0005F8 36 00                  715 	ld	(hl), #0x00
      0005FA 21r32r01               716 	ld	hl, #(_testmap + 0x00d2)
      0005FD 36 00                  717 	ld	(hl), #0x00
      0005FF 21r33r01               718 	ld	hl, #(_testmap + 0x00d3)
      000602 36 00                  719 	ld	(hl), #0x00
      000604 21r34r01               720 	ld	hl, #(_testmap + 0x00d4)
      000607 36 00                  721 	ld	(hl), #0x00
      000609 21r35r01               722 	ld	hl, #(_testmap + 0x00d5)
      00060C 36 00                  723 	ld	(hl), #0x00
      00060E 21r36r01               724 	ld	hl, #(_testmap + 0x00d6)
      000611 36 00                  725 	ld	(hl), #0x00
      000613 21r37r01               726 	ld	hl, #(_testmap + 0x00d7)
      000616 36 00                  727 	ld	(hl), #0x00
      000618 21r38r01               728 	ld	hl, #(_testmap + 0x00d8)
      00061B 36 00                  729 	ld	(hl), #0x00
      00061D 21r39r01               730 	ld	hl, #(_testmap + 0x00d9)
      000620 36 00                  731 	ld	(hl), #0x00
      000622 21r3Ar01               732 	ld	hl, #(_testmap + 0x00da)
      000625 36 00                  733 	ld	(hl), #0x00
      000627 21r3Br01               734 	ld	hl, #(_testmap + 0x00db)
      00062A 36 00                  735 	ld	(hl), #0x00
      00062C 21r3Cr01               736 	ld	hl, #(_testmap + 0x00dc)
      00062F 36 00                  737 	ld	(hl), #0x00
      000631 21r3Dr01               738 	ld	hl, #(_testmap + 0x00dd)
      000634 36 00                  739 	ld	(hl), #0x00
      000636 21r3Er01               740 	ld	hl, #(_testmap + 0x00de)
      000639 36 00                  741 	ld	(hl), #0x00
      00063B 21r3Fr01               742 	ld	hl, #(_testmap + 0x00df)
      00063E 36 00                  743 	ld	(hl), #0x00
      000640 21r40r01               744 	ld	hl, #(_testmap + 0x00e0)
      000643 36 00                  745 	ld	(hl), #0x00
      000645 21r41r01               746 	ld	hl, #(_testmap + 0x00e1)
      000648 36 00                  747 	ld	(hl), #0x00
      00064A 21r42r01               748 	ld	hl, #(_testmap + 0x00e2)
      00064D 36 00                  749 	ld	(hl), #0x00
      00064F 21r43r01               750 	ld	hl, #(_testmap + 0x00e3)
      000652 36 00                  751 	ld	(hl), #0x00
      000654 21r44r01               752 	ld	hl, #(_testmap + 0x00e4)
      000657 36 00                  753 	ld	(hl), #0x00
      000659 21r45r01               754 	ld	hl, #(_testmap + 0x00e5)
      00065C 36 00                  755 	ld	(hl), #0x00
      00065E 21r46r01               756 	ld	hl, #(_testmap + 0x00e6)
      000661 36 00                  757 	ld	(hl), #0x00
      000663 21r47r01               758 	ld	hl, #(_testmap + 0x00e7)
      000666 36 00                  759 	ld	(hl), #0x00
      000668 21r48r01               760 	ld	hl, #(_testmap + 0x00e8)
      00066B 36 00                  761 	ld	(hl), #0x00
      00066D 21r49r01               762 	ld	hl, #(_testmap + 0x00e9)
      000670 36 00                  763 	ld	(hl), #0x00
      000672 21r4Ar01               764 	ld	hl, #(_testmap + 0x00ea)
      000675 36 00                  765 	ld	(hl), #0x00
      000677 21r4Br01               766 	ld	hl, #(_testmap + 0x00eb)
      00067A 36 00                  767 	ld	(hl), #0x00
      00067C 21r4Cr01               768 	ld	hl, #(_testmap + 0x00ec)
      00067F 36 00                  769 	ld	(hl), #0x00
      000681 21r4Dr01               770 	ld	hl, #(_testmap + 0x00ed)
      000684 36 00                  771 	ld	(hl), #0x00
      000686 21r4Er01               772 	ld	hl, #(_testmap + 0x00ee)
      000689 36 00                  773 	ld	(hl), #0x00
      00068B 21r4Fr01               774 	ld	hl, #(_testmap + 0x00ef)
      00068E 36 00                  775 	ld	(hl), #0x00
      000690 21r50r01               776 	ld	hl, #(_testmap + 0x00f0)
      000693 36 00                  777 	ld	(hl), #0x00
      000695 21r51r01               778 	ld	hl, #(_testmap + 0x00f1)
      000698 36 00                  779 	ld	(hl), #0x00
      00069A 21r52r01               780 	ld	hl, #(_testmap + 0x00f2)
      00069D 36 00                  781 	ld	(hl), #0x00
      00069F 21r53r01               782 	ld	hl, #(_testmap + 0x00f3)
      0006A2 36 00                  783 	ld	(hl), #0x00
      0006A4 21r54r01               784 	ld	hl, #(_testmap + 0x00f4)
      0006A7 36 00                  785 	ld	(hl), #0x00
      0006A9 21r55r01               786 	ld	hl, #(_testmap + 0x00f5)
      0006AC 36 00                  787 	ld	(hl), #0x00
      0006AE 21r56r01               788 	ld	hl, #(_testmap + 0x00f6)
      0006B1 36 00                  789 	ld	(hl), #0x00
      0006B3 21r57r01               790 	ld	hl, #(_testmap + 0x00f7)
      0006B6 36 00                  791 	ld	(hl), #0x00
      0006B8 21r58r01               792 	ld	hl, #(_testmap + 0x00f8)
      0006BB 36 00                  793 	ld	(hl), #0x00
      0006BD 21r59r01               794 	ld	hl, #(_testmap + 0x00f9)
      0006C0 36 00                  795 	ld	(hl), #0x00
      0006C2 21r5Ar01               796 	ld	hl, #(_testmap + 0x00fa)
      0006C5 36 00                  797 	ld	(hl), #0x00
      0006C7 21r5Br01               798 	ld	hl, #(_testmap + 0x00fb)
      0006CA 36 00                  799 	ld	(hl), #0x00
      0006CC 21r5Cr01               800 	ld	hl, #(_testmap + 0x00fc)
      0006CF 36 00                  801 	ld	(hl), #0x00
      0006D1 21r5Dr01               802 	ld	hl, #(_testmap + 0x00fd)
      0006D4 36 00                  803 	ld	(hl), #0x00
      0006D6 21r5Er01               804 	ld	hl, #(_testmap + 0x00fe)
      0006D9 36 00                  805 	ld	(hl), #0x00
      0006DB 21r5Fr01               806 	ld	hl, #(_testmap + 0x00ff)
      0006DE 36 00                  807 	ld	(hl), #0x00
      0006E0 21r60r01               808 	ld	hl, #(_testmap + 0x0100)
      0006E3 36 00                  809 	ld	(hl), #0x00
      0006E5 21r61r01               810 	ld	hl, #(_testmap + 0x0101)
      0006E8 36 00                  811 	ld	(hl), #0x00
      0006EA 21r62r01               812 	ld	hl, #(_testmap + 0x0102)
      0006ED 36 00                  813 	ld	(hl), #0x00
      0006EF 21r63r01               814 	ld	hl, #(_testmap + 0x0103)
      0006F2 36 00                  815 	ld	(hl), #0x00
      0006F4 21r64r01               816 	ld	hl, #(_testmap + 0x0104)
      0006F7 36 00                  817 	ld	(hl), #0x00
      0006F9 21r65r01               818 	ld	hl, #(_testmap + 0x0105)
      0006FC 36 00                  819 	ld	(hl), #0x00
      0006FE 21r66r01               820 	ld	hl, #(_testmap + 0x0106)
      000701 36 00                  821 	ld	(hl), #0x00
      000703 21r67r01               822 	ld	hl, #(_testmap + 0x0107)
      000706 36 00                  823 	ld	(hl), #0x00
      000708 21r68r01               824 	ld	hl, #(_testmap + 0x0108)
      00070B 36 00                  825 	ld	(hl), #0x00
      00070D 21r69r01               826 	ld	hl, #(_testmap + 0x0109)
      000710 36 00                  827 	ld	(hl), #0x00
      000712 21r6Ar01               828 	ld	hl, #(_testmap + 0x010a)
      000715 36 00                  829 	ld	(hl), #0x00
      000717 21r6Br01               830 	ld	hl, #(_testmap + 0x010b)
      00071A 36 00                  831 	ld	(hl), #0x00
      00071C 21r6Cr01               832 	ld	hl, #(_testmap + 0x010c)
      00071F 36 00                  833 	ld	(hl), #0x00
      000721 21r6Dr01               834 	ld	hl, #(_testmap + 0x010d)
      000724 36 00                  835 	ld	(hl), #0x00
      000726 21r6Er01               836 	ld	hl, #(_testmap + 0x010e)
      000729 36 00                  837 	ld	(hl), #0x00
      00072B 21r6Fr01               838 	ld	hl, #(_testmap + 0x010f)
      00072E 36 00                  839 	ld	(hl), #0x00
      000730 21r70r01               840 	ld	hl, #(_testmap + 0x0110)
      000733 36 00                  841 	ld	(hl), #0x00
      000735 21r71r01               842 	ld	hl, #(_testmap + 0x0111)
      000738 36 00                  843 	ld	(hl), #0x00
      00073A 21r72r01               844 	ld	hl, #(_testmap + 0x0112)
      00073D 36 00                  845 	ld	(hl), #0x00
      00073F 21r73r01               846 	ld	hl, #(_testmap + 0x0113)
      000742 36 00                  847 	ld	(hl), #0x00
      000744 21r74r01               848 	ld	hl, #(_testmap + 0x0114)
      000747 36 00                  849 	ld	(hl), #0x00
      000749 21r75r01               850 	ld	hl, #(_testmap + 0x0115)
      00074C 36 00                  851 	ld	(hl), #0x00
      00074E 21r76r01               852 	ld	hl, #(_testmap + 0x0116)
      000751 36 00                  853 	ld	(hl), #0x00
      000753 21r77r01               854 	ld	hl, #(_testmap + 0x0117)
      000756 36 00                  855 	ld	(hl), #0x00
      000758 21r78r01               856 	ld	hl, #(_testmap + 0x0118)
      00075B 36 03                  857 	ld	(hl), #0x03
      00075D 21r79r01               858 	ld	hl, #(_testmap + 0x0119)
      000760 36 03                  859 	ld	(hl), #0x03
      000762 21r7Ar01               860 	ld	hl, #(_testmap + 0x011a)
      000765 36 03                  861 	ld	(hl), #0x03
      000767 21r7Br01               862 	ld	hl, #(_testmap + 0x011b)
      00076A 36 03                  863 	ld	(hl), #0x03
      00076C 21r7Cr01               864 	ld	hl, #(_testmap + 0x011c)
      00076F 36 03                  865 	ld	(hl), #0x03
      000771 21r7Dr01               866 	ld	hl, #(_testmap + 0x011d)
      000774 36 03                  867 	ld	(hl), #0x03
      000776 21r7Er01               868 	ld	hl, #(_testmap + 0x011e)
      000779 36 03                  869 	ld	(hl), #0x03
      00077B 21r7Fr01               870 	ld	hl, #(_testmap + 0x011f)
      00077E 36 03                  871 	ld	(hl), #0x03
      000780 21r80r01               872 	ld	hl, #(_testmap + 0x0120)
      000783 36 03                  873 	ld	(hl), #0x03
      000785 21r81r01               874 	ld	hl, #(_testmap + 0x0121)
      000788 36 03                  875 	ld	(hl), #0x03
      00078A 21r82r01               876 	ld	hl, #(_testmap + 0x0122)
      00078D 36 03                  877 	ld	(hl), #0x03
      00078F 21r83r01               878 	ld	hl, #(_testmap + 0x0123)
      000792 36 03                  879 	ld	(hl), #0x03
      000794 21r84r01               880 	ld	hl, #(_testmap + 0x0124)
      000797 36 03                  881 	ld	(hl), #0x03
      000799 21r85r01               882 	ld	hl, #(_testmap + 0x0125)
      00079C 36 03                  883 	ld	(hl), #0x03
      00079E 21r86r01               884 	ld	hl, #(_testmap + 0x0126)
      0007A1 36 03                  885 	ld	(hl), #0x03
      0007A3 21r87r01               886 	ld	hl, #(_testmap + 0x0127)
      0007A6 36 03                  887 	ld	(hl), #0x03
      0007A8 21r88r01               888 	ld	hl, #(_testmap + 0x0128)
      0007AB 36 03                  889 	ld	(hl), #0x03
      0007AD 21r89r01               890 	ld	hl, #(_testmap + 0x0129)
      0007B0 36 03                  891 	ld	(hl), #0x03
      0007B2 21r8Ar01               892 	ld	hl, #(_testmap + 0x012a)
      0007B5 36 03                  893 	ld	(hl), #0x03
      0007B7 21r8Br01               894 	ld	hl, #(_testmap + 0x012b)
      0007BA 36 03                  895 	ld	(hl), #0x03
      0007BC 21r8Cr01               896 	ld	hl, #(_testmap + 0x012c)
      0007BF 36 03                  897 	ld	(hl), #0x03
      0007C1 21r8Dr01               898 	ld	hl, #(_testmap + 0x012d)
      0007C4 36 03                  899 	ld	(hl), #0x03
      0007C6 21r8Er01               900 	ld	hl, #(_testmap + 0x012e)
      0007C9 36 03                  901 	ld	(hl), #0x03
      0007CB 21r8Fr01               902 	ld	hl, #(_testmap + 0x012f)
      0007CE 36 03                  903 	ld	(hl), #0x03
      0007D0 21r90r01               904 	ld	hl, #(_testmap + 0x0130)
      0007D3 36 03                  905 	ld	(hl), #0x03
      0007D5 21r91r01               906 	ld	hl, #(_testmap + 0x0131)
      0007D8 36 03                  907 	ld	(hl), #0x03
      0007DA 21r92r01               908 	ld	hl, #(_testmap + 0x0132)
      0007DD 36 03                  909 	ld	(hl), #0x03
      0007DF 21r93r01               910 	ld	hl, #(_testmap + 0x0133)
      0007E2 36 03                  911 	ld	(hl), #0x03
      0007E4 21r94r01               912 	ld	hl, #(_testmap + 0x0134)
      0007E7 36 03                  913 	ld	(hl), #0x03
      0007E9 21r95r01               914 	ld	hl, #(_testmap + 0x0135)
      0007EC 36 03                  915 	ld	(hl), #0x03
      0007EE 21r96r01               916 	ld	hl, #(_testmap + 0x0136)
      0007F1 36 03                  917 	ld	(hl), #0x03
      0007F3 21r97r01               918 	ld	hl, #(_testmap + 0x0137)
      0007F6 36 03                  919 	ld	(hl), #0x03
      0007F8 21r98r01               920 	ld	hl, #(_testmap + 0x0138)
      0007FB 36 03                  921 	ld	(hl), #0x03
      0007FD 21r99r01               922 	ld	hl, #(_testmap + 0x0139)
      000800 36 03                  923 	ld	(hl), #0x03
      000802 21r9Ar01               924 	ld	hl, #(_testmap + 0x013a)
      000805 36 03                  925 	ld	(hl), #0x03
      000807 21r9Br01               926 	ld	hl, #(_testmap + 0x013b)
      00080A 36 03                  927 	ld	(hl), #0x03
      00080C 21r9Cr01               928 	ld	hl, #(_testmap + 0x013c)
      00080F 36 03                  929 	ld	(hl), #0x03
      000811 21r9Dr01               930 	ld	hl, #(_testmap + 0x013d)
      000814 36 03                  931 	ld	(hl), #0x03
      000816 21r9Er01               932 	ld	hl, #(_testmap + 0x013e)
      000819 36 03                  933 	ld	(hl), #0x03
      00081B 21r9Fr01               934 	ld	hl, #(_testmap + 0x013f)
      00081E 36 03                  935 	ld	(hl), #0x03
      000820 21rA0r01               936 	ld	hl, #(_testmap + 0x0140)
      000823 36 03                  937 	ld	(hl), #0x03
      000825 21rA1r01               938 	ld	hl, #(_testmap + 0x0141)
      000828 36 03                  939 	ld	(hl), #0x03
      00082A 21rA2r01               940 	ld	hl, #(_testmap + 0x0142)
      00082D 36 03                  941 	ld	(hl), #0x03
      00082F 21rA3r01               942 	ld	hl, #(_testmap + 0x0143)
      000832 36 03                  943 	ld	(hl), #0x03
      000834 21rA4r01               944 	ld	hl, #(_testmap + 0x0144)
      000837 36 03                  945 	ld	(hl), #0x03
      000839 21rA5r01               946 	ld	hl, #(_testmap + 0x0145)
      00083C 36 03                  947 	ld	(hl), #0x03
      00083E 21rA6r01               948 	ld	hl, #(_testmap + 0x0146)
      000841 36 03                  949 	ld	(hl), #0x03
      000843 21rA7r01               950 	ld	hl, #(_testmap + 0x0147)
      000846 36 03                  951 	ld	(hl), #0x03
      000848 21rA8r01               952 	ld	hl, #(_testmap + 0x0148)
      00084B 36 03                  953 	ld	(hl), #0x03
      00084D 21rA9r01               954 	ld	hl, #(_testmap + 0x0149)
      000850 36 03                  955 	ld	(hl), #0x03
      000852 21rAAr01               956 	ld	hl, #(_testmap + 0x014a)
      000855 36 03                  957 	ld	(hl), #0x03
      000857 21rABr01               958 	ld	hl, #(_testmap + 0x014b)
      00085A 36 03                  959 	ld	(hl), #0x03
      00085C 21rACr01               960 	ld	hl, #(_testmap + 0x014c)
      00085F 36 03                  961 	ld	(hl), #0x03
      000861 21rADr01               962 	ld	hl, #(_testmap + 0x014d)
      000864 36 03                  963 	ld	(hl), #0x03
      000866 21rAEr01               964 	ld	hl, #(_testmap + 0x014e)
      000869 36 03                  965 	ld	(hl), #0x03
      00086B 21rAFr01               966 	ld	hl, #(_testmap + 0x014f)
      00086E 36 03                  967 	ld	(hl), #0x03
      000870 21rB0r01               968 	ld	hl, #(_testmap + 0x0150)
      000873 36 03                  969 	ld	(hl), #0x03
      000875 21rB1r01               970 	ld	hl, #(_testmap + 0x0151)
      000878 36 03                  971 	ld	(hl), #0x03
      00087A 21rB2r01               972 	ld	hl, #(_testmap + 0x0152)
      00087D 36 03                  973 	ld	(hl), #0x03
      00087F 21rB3r01               974 	ld	hl, #(_testmap + 0x0153)
      000882 36 03                  975 	ld	(hl), #0x03
      000884 21rB4r01               976 	ld	hl, #(_testmap + 0x0154)
      000887 36 03                  977 	ld	(hl), #0x03
      000889 21rB5r01               978 	ld	hl, #(_testmap + 0x0155)
      00088C 36 03                  979 	ld	(hl), #0x03
      00088E 21rB6r01               980 	ld	hl, #(_testmap + 0x0156)
      000891 36 03                  981 	ld	(hl), #0x03
      000893 21rB7r01               982 	ld	hl, #(_testmap + 0x0157)
      000896 36 03                  983 	ld	(hl), #0x03
      000898 21rB8r01               984 	ld	hl, #(_testmap + 0x0158)
      00089B 36 03                  985 	ld	(hl), #0x03
      00089D 21rB9r01               986 	ld	hl, #(_testmap + 0x0159)
      0008A0 36 03                  987 	ld	(hl), #0x03
      0008A2 21rBAr01               988 	ld	hl, #(_testmap + 0x015a)
      0008A5 36 03                  989 	ld	(hl), #0x03
      0008A7 21rBBr01               990 	ld	hl, #(_testmap + 0x015b)
      0008AA 36 03                  991 	ld	(hl), #0x03
      0008AC 21rBCr01               992 	ld	hl, #(_testmap + 0x015c)
      0008AF 36 03                  993 	ld	(hl), #0x03
      0008B1 21rBDr01               994 	ld	hl, #(_testmap + 0x015d)
      0008B4 36 03                  995 	ld	(hl), #0x03
      0008B6 21rBEr01               996 	ld	hl, #(_testmap + 0x015e)
      0008B9 36 03                  997 	ld	(hl), #0x03
      0008BB 21rBFr01               998 	ld	hl, #(_testmap + 0x015f)
      0008BE 36 03                  999 	ld	(hl), #0x03
      0008C0 21rC0r01              1000 	ld	hl, #(_testmap + 0x0160)
      0008C3 36 03                 1001 	ld	(hl), #0x03
      0008C5 21rC1r01              1002 	ld	hl, #(_testmap + 0x0161)
      0008C8 36 03                 1003 	ld	(hl), #0x03
      0008CA 21rC2r01              1004 	ld	hl, #(_testmap + 0x0162)
      0008CD 36 03                 1005 	ld	(hl), #0x03
      0008CF 21rC3r01              1006 	ld	hl, #(_testmap + 0x0163)
      0008D2 36 03                 1007 	ld	(hl), #0x03
      0008D4 21rC4r01              1008 	ld	hl, #(_testmap + 0x0164)
      0008D7 36 03                 1009 	ld	(hl), #0x03
      0008D9 21rC5r01              1010 	ld	hl, #(_testmap + 0x0165)
      0008DC 36 03                 1011 	ld	(hl), #0x03
      0008DE 21rC6r01              1012 	ld	hl, #(_testmap + 0x0166)
      0008E1 36 03                 1013 	ld	(hl), #0x03
      0008E3 21rC7r01              1014 	ld	hl, #(_testmap + 0x0167)
      0008E6 36 03                 1015 	ld	(hl), #0x03
                           0008E8  1016 	C$main.c$14$1_0$138	= .
                                   1017 	.globl	C$main.c$14$1_0$138
                                   1018 ;main.c:14: int printcounter = 0;
      0008E8 21rC8r01              1019 	ld	hl, #_printcounter
      0008EB 36 00                 1020 	ld	(hl), #0x00
      0008ED 23                    1021 	inc	hl
      0008EE 36 00                 1022 	ld	(hl), #0x00
                           0008F0  1023 	C$main.c$17$1_0$138	= .
                                   1024 	.globl	C$main.c$17$1_0$138
                                   1025 ;main.c:17: INT8 xSpeed = 0, ySpeed = 0;
      0008F0 21rCEr01              1026 	ld	hl, #_xSpeed
      0008F3 36 00                 1027 	ld	(hl), #0x00
                           0008F5  1028 	C$main.c$17$1_0$138	= .
                                   1029 	.globl	C$main.c$17$1_0$138
                                   1030 ;main.c:17: UINT8 ground_coll = 1, ceiling_coll = 0;
      0008F5 21rCFr01              1031 	ld	hl, #_ySpeed
      0008F8 36 00                 1032 	ld	(hl), #0x00
                           0008FA  1033 	C$main.c$18$1_0$138	= .
                                   1034 	.globl	C$main.c$18$1_0$138
                                   1035 ;main.c:18: UINT8 x_values[WDT];
      0008FA 21rD0r01              1036 	ld	hl, #_ground_coll
      0008FD 36 01                 1037 	ld	(hl), #0x01
                           0008FF  1038 	C$main.c$18$1_0$138	= .
                                   1039 	.globl	C$main.c$18$1_0$138
                                   1040 ;main.c:18: UINT8 ground_coll = 1, ceiling_coll = 0;
      0008FF 21rD1r01              1041 	ld	hl, #_ceiling_coll
      000902 36 00                 1042 	ld	(hl), #0x00
                                   1043 ;--------------------------------------------------------
                                   1044 ; Home
                                   1045 ;--------------------------------------------------------
                                   1046 	.area _HOME
                                   1047 	.area _HOME
                                   1048 ;--------------------------------------------------------
                                   1049 ; code
                                   1050 ;--------------------------------------------------------
                                   1051 	.area _CODE
                           000000  1052 	G$main$0$0	= .
                                   1053 	.globl	G$main$0$0
                           000000  1054 	C$main.c$29$0_0$119	= .
                                   1055 	.globl	C$main.c$29$0_0$119
                                   1056 ;main.c:29: void main(void)
                                   1057 ;	---------------------------------
                                   1058 ; Function main
                                   1059 ; ---------------------------------
      000000                       1060 _main::
                           000000  1061 	C$main.c$31$1_0$119	= .
                                   1062 	.globl	C$main.c$31$1_0$119
                                   1063 ;main.c:31: SHOW_SPRITES;
      000000 F0r00                 1064 	ldh	a, (_LCDC_REG+0)
      000002 F6 02                 1065 	or	a, #0x02
      000004 E0r00                 1066 	ldh	(_LCDC_REG+0),a
                           000006  1067 	C$main.c$32$1_0$119	= .
                                   1068 	.globl	C$main.c$32$1_0$119
                                   1069 ;main.c:32: DISPLAY_ON;
      000006 F0r00                 1070 	ldh	a, (_LCDC_REG+0)
      000008 F6 80                 1071 	or	a, #0x80
      00000A E0r00                 1072 	ldh	(_LCDC_REG+0),a
                           00000C  1073 	C$main.c$33$1_0$119	= .
                                   1074 	.globl	C$main.c$33$1_0$119
                                   1075 ;main.c:33: SHOW_BKG;
      00000C F0r00                 1076 	ldh	a, (_LCDC_REG+0)
      00000E F6 01                 1077 	or	a, #0x01
      000010 E0r00                 1078 	ldh	(_LCDC_REG+0),a
                           000012  1079 	C$main.c$34$1_0$119	= .
                                   1080 	.globl	C$main.c$34$1_0$119
                                   1081 ;main.c:34: set_sprite_data(0, sizeof(square_data) >> 4, square_data);
      000012 21r00r00              1082 	ld	hl, #_square_data
      000015 E5                    1083 	push	hl
      000016 3E 04                 1084 	ld	a, #0x04
      000018 F5                    1085 	push	af
      000019 33                    1086 	inc	sp
      00001A AF                    1087 	xor	a, a
      00001B F5                    1088 	push	af
      00001C 33                    1089 	inc	sp
      00001D CDr00r00              1090 	call	_set_sprite_data
      000020 E8 04                 1091 	add	sp, #4
                           000022  1092 	C$main.c$35$1_0$119	= .
                                   1093 	.globl	C$main.c$35$1_0$119
                                   1094 ;main.c:35: set_bkg_data(0, 5, bktiles);
      000022 21r00r00              1095 	ld	hl, #_bktiles
      000025 E5                    1096 	push	hl
      000026 3E 05                 1097 	ld	a, #0x05
      000028 F5                    1098 	push	af
      000029 33                    1099 	inc	sp
      00002A AF                    1100 	xor	a, a
      00002B F5                    1101 	push	af
      00002C 33                    1102 	inc	sp
      00002D CDr00r00              1103 	call	_set_bkg_data
      000030 E8 04                 1104 	add	sp, #4
                           000032  1105 	C$main.c$36$1_0$119	= .
                                   1106 	.globl	C$main.c$36$1_0$119
                                   1107 ;main.c:36: set_bkg_submap(0, 0, 20, 18, testmap, 20);
      000032 3E 14                 1108 	ld	a, #0x14
      000034 F5                    1109 	push	af
      000035 33                    1110 	inc	sp
      000036 21r60r00              1111 	ld	hl, #_testmap
      000039 E5                    1112 	push	hl
      00003A 11 14 12              1113 	ld	de, #0x1214
      00003D D5                    1114 	push	de
      00003E AF                    1115 	xor	a, a
      00003F F5                    1116 	push	af
      000040 33                    1117 	inc	sp
      000041 AF                    1118 	xor	a, a
      000042 F5                    1119 	push	af
      000043 33                    1120 	inc	sp
      000044 CDr00r00              1121 	call	_set_bkg_submap
      000047 E8 07                 1122 	add	sp, #7
                           000049  1123 	C$main.c$37$1_0$119	= .
                                   1124 	.globl	C$main.c$37$1_0$119
                                   1125 ;main.c:37: pX = 40; pY = 80;
      000049 21rCAr01              1126 	ld	hl, #_pX
      00004C 36 28                 1127 	ld	(hl), #0x28
      00004E 21rCBr01              1128 	ld	hl, #_pY
      000051 36 50                 1129 	ld	(hl), #0x50
                           000053  1130 	C$main.c$38$1_0$119	= .
                                   1131 	.globl	C$main.c$38$1_0$119
                                   1132 ;main.c:38: xLast = pX; yLast = pY;
      000053 21rCCr01              1133 	ld	hl, #_xLast
      000056 36 28                 1134 	ld	(hl), #0x28
      000058 21rCDr01              1135 	ld	hl, #_yLast
      00005B 36 50                 1136 	ld	(hl), #0x50
                           00005D  1137 	C$main.c$39$1_0$119	= .
                                   1138 	.globl	C$main.c$39$1_0$119
                                   1139 ;main.c:39: moveplayer();
      00005D CDr80r00              1140 	call	_moveplayer
                           000060  1141 	C$main.c$40$1_0$119	= .
                                   1142 	.globl	C$main.c$40$1_0$119
                                   1143 ;main.c:40: while(1)
      000060                       1144 00102$:
                           000060  1145 	C$main.c$42$2_0$120	= .
                                   1146 	.globl	C$main.c$42$2_0$120
                                   1147 ;main.c:42: basicmove();       
      000060 CDrA3r00              1148 	call	_basicmove
                           000063  1149 	C$main.c$43$2_0$120	= .
                                   1150 	.globl	C$main.c$43$2_0$120
                                   1151 ;main.c:43: collision();
      000063 CDr17r01              1152 	call	_collision
                           000066  1153 	C$main.c$44$2_0$120	= .
                                   1154 	.globl	C$main.c$44$2_0$120
                                   1155 ;main.c:44: xLast = pX;
      000066 FArCAr01              1156 	ld	a, (#_pX)
      000069 EArCCr01              1157 	ld	(#_xLast),a
                           00006C  1158 	C$main.c$45$2_0$120	= .
                                   1159 	.globl	C$main.c$45$2_0$120
                                   1160 ;main.c:45: yLast = pY;
      00006C FArCBr01              1161 	ld	a, (#_pY)
      00006F EArCDr01              1162 	ld	(#_yLast),a
                           000072  1163 	C$main.c$46$2_0$120	= .
                                   1164 	.globl	C$main.c$46$2_0$120
                                   1165 ;main.c:46: moveplayer();
      000072 CDr80r00              1166 	call	_moveplayer
                           000075  1167 	C$main.c$47$2_0$120	= .
                                   1168 	.globl	C$main.c$47$2_0$120
                                   1169 ;main.c:47: delay(30);
      000075 21 1E 00              1170 	ld	hl, #0x001e
      000078 E5                    1171 	push	hl
      000079 CDr00r00              1172 	call	_delay
      00007C E8 02                 1173 	add	sp, #2
                           00007E  1174 	C$main.c$49$1_0$119	= .
                                   1175 	.globl	C$main.c$49$1_0$119
                                   1176 ;main.c:49: }
                           00007E  1177 	C$main.c$49$1_0$119	= .
                                   1178 	.globl	C$main.c$49$1_0$119
                           00007E  1179 	XG$main$0$0	= .
                                   1180 	.globl	XG$main$0$0
      00007E 18 E0                 1181 	jr	00102$
                           000080  1182 	G$moveplayer$0$0	= .
                                   1183 	.globl	G$moveplayer$0$0
                           000080  1184 	C$main.c$51$1_0$122	= .
                                   1185 	.globl	C$main.c$51$1_0$122
                                   1186 ;main.c:51: void moveplayer(void)
                                   1187 ;	---------------------------------
                                   1188 ; Function moveplayer
                                   1189 ; ---------------------------------
      000080                       1190 _moveplayer::
                                   1191 ;main.c:53: move_metasprite(square_metasprites[0], 0, 0, xLast, yLast);
      000080 21rCDr01              1192 	ld	hl, #_yLast
      000083 46                    1193 	ld	b, (hl)
      000084 21rCCr01              1194 	ld	hl, #_xLast
      000087 4E                    1195 	ld	c, (hl)
      000088 21r00r00              1196 	ld	hl, #_square_metasprites
      00008B 2A                    1197 	ld	a, (hl+)
      00008C 66                    1198 	ld	h, (hl)
                                   1199 ;c:/gbdk/include/gb/metasprites.h:79: __current_metasprite = metasprite; 
      00008D EAr00r00              1200 	ld	(___current_metasprite), a
      000090 7C                    1201 	ld	a, h
      000091 EAr01r00              1202 	ld	(___current_metasprite + 1), a
                                   1203 ;c:/gbdk/include/gb/metasprites.h:80: __current_base_tile = base_tile;
      000094 21r00r00              1204 	ld	hl, #___current_base_tile
      000097 36 00                 1205 	ld	(hl), #0x00
                                   1206 ;c:/gbdk/include/gb/metasprites.h:81: return __move_metasprite(base_sprite, x, y); 
      000099 C5                    1207 	push	bc
      00009A AF                    1208 	xor	a, a
      00009B F5                    1209 	push	af
      00009C 33                    1210 	inc	sp
      00009D CDr00r00              1211 	call	___move_metasprite
      0000A0 E8 03                 1212 	add	sp, #3
                           0000A2  1213 	C$main.c$53$3_0$122	= .
                                   1214 	.globl	C$main.c$53$3_0$122
                                   1215 ;main.c:53: move_metasprite(square_metasprites[0], 0, 0, xLast, yLast);
                           0000A2  1216 	C$main.c$54$3_0$122	= .
                                   1217 	.globl	C$main.c$54$3_0$122
                                   1218 ;main.c:54: }
                           0000A2  1219 	C$main.c$54$3_0$122	= .
                                   1220 	.globl	C$main.c$54$3_0$122
                           0000A2  1221 	XG$moveplayer$0$0	= .
                                   1222 	.globl	XG$moveplayer$0$0
      0000A2 C9                    1223 	ret
                           0000A3  1224 	G$basicmove$0$0	= .
                                   1225 	.globl	G$basicmove$0$0
                           0000A3  1226 	C$main.c$56$3_0$127	= .
                                   1227 	.globl	C$main.c$56$3_0$127
                                   1228 ;main.c:56: void basicmove(void)
                                   1229 ;	---------------------------------
                                   1230 ; Function basicmove
                                   1231 ; ---------------------------------
      0000A3                       1232 _basicmove::
                           0000A3  1233 	C$main.c$58$1_0$127	= .
                                   1234 	.globl	C$main.c$58$1_0$127
                                   1235 ;main.c:58: if(joypad() & J_A && ground_coll == 1 && ceiling_coll == 0)
      0000A3 CDr00r00              1236 	call	_joypad
      0000A6 CB 63                 1237 	bit	4, e
      0000A8 28 16                 1238 	jr	Z, 00102$
      0000AA FArD0r01              1239 	ld	a, (#_ground_coll)
      0000AD 3D                    1240 	dec	a
      0000AE 20 10                 1241 	jr	NZ, 00102$
      0000B0 FArD1r01              1242 	ld	a, (#_ceiling_coll)
      0000B3 B7                    1243 	or	a, a
      0000B4 20 0A                 1244 	jr	NZ, 00102$
                           0000B6  1245 	C$main.c$61$2_0$128	= .
                                   1246 	.globl	C$main.c$61$2_0$128
                                   1247 ;main.c:61: ySpeed = -9;
      0000B6 21rCFr01              1248 	ld	hl, #_ySpeed
      0000B9 36 F7                 1249 	ld	(hl), #0xf7
                           0000BB  1250 	C$main.c$62$2_0$128	= .
                                   1251 	.globl	C$main.c$62$2_0$128
                                   1252 ;main.c:62: ground_coll = 0;
      0000BB 21rD0r01              1253 	ld	hl, #_ground_coll
      0000BE 36 00                 1254 	ld	(hl), #0x00
      0000C0                       1255 00102$:
                           0000C0  1256 	C$main.c$65$1_0$127	= .
                                   1257 	.globl	C$main.c$65$1_0$127
                                   1258 ;main.c:65: if(joypad() & J_RIGHT)
      0000C0 CDr00r00              1259 	call	_joypad
      0000C3 7B                    1260 	ld	a, e
      0000C4 0F                    1261 	rrca
      0000C5 30 09                 1262 	jr	NC, 00108$
                           0000C7  1263 	C$main.c$67$2_0$129	= .
                                   1264 	.globl	C$main.c$67$2_0$129
                                   1265 ;main.c:67: pX += 2;
      0000C7 21rCAr01              1266 	ld	hl, #_pX
      0000CA 7E                    1267 	ld	a, (hl)
      0000CB C6 02                 1268 	add	a, #0x02
      0000CD 77                    1269 	ld	(hl), a
      0000CE 18 0E                 1270 	jr	00109$
      0000D0                       1271 00108$:
                           0000D0  1272 	C$main.c$69$1_0$127	= .
                                   1273 	.globl	C$main.c$69$1_0$127
                                   1274 ;main.c:69: else if(joypad() & J_LEFT)
      0000D0 CDr00r00              1275 	call	_joypad
      0000D3 CB 4B                 1276 	bit	1, e
      0000D5 28 07                 1277 	jr	Z, 00109$
                           0000D7  1278 	C$main.c$71$2_0$130	= .
                                   1279 	.globl	C$main.c$71$2_0$130
                                   1280 ;main.c:71: pX -= 2;
      0000D7 21rCAr01              1281 	ld	hl, #_pX
      0000DA 7E                    1282 	ld	a, (hl)
      0000DB C6 FE                 1283 	add	a, #0xfe
      0000DD 77                    1284 	ld	(hl), a
      0000DE                       1285 00109$:
                           0000DE  1286 	C$main.c$74$1_0$127	= .
                                   1287 	.globl	C$main.c$74$1_0$127
                                   1288 ;main.c:74: if(joypad() & J_DOWN)
      0000DE CDr00r00              1289 	call	_joypad
      0000E1 CB 5B                 1290 	bit	3, e
      0000E3 28 09                 1291 	jr	Z, 00113$
                           0000E5  1292 	C$main.c$76$2_0$131	= .
                                   1293 	.globl	C$main.c$76$2_0$131
                                   1294 ;main.c:76: pY += 2;
      0000E5 21rCBr01              1295 	ld	hl, #_pY
      0000E8 7E                    1296 	ld	a, (hl)
      0000E9 C6 02                 1297 	add	a, #0x02
      0000EB 77                    1298 	ld	(hl), a
      0000EC 18 0E                 1299 	jr	00114$
      0000EE                       1300 00113$:
                           0000EE  1301 	C$main.c$78$1_0$127	= .
                                   1302 	.globl	C$main.c$78$1_0$127
                                   1303 ;main.c:78: else if(joypad() & J_UP)
      0000EE CDr00r00              1304 	call	_joypad
      0000F1 CB 53                 1305 	bit	2, e
      0000F3 28 07                 1306 	jr	Z, 00114$
                           0000F5  1307 	C$main.c$80$2_0$132	= .
                                   1308 	.globl	C$main.c$80$2_0$132
                                   1309 ;main.c:80: pY -= 2;
      0000F5 21rCBr01              1310 	ld	hl, #_pY
      0000F8 7E                    1311 	ld	a, (hl)
      0000F9 C6 FE                 1312 	add	a, #0xfe
      0000FB 77                    1313 	ld	(hl), a
      0000FC                       1314 00114$:
                           0000FC  1315 	C$main.c$83$1_0$127	= .
                                   1316 	.globl	C$main.c$83$1_0$127
                                   1317 ;main.c:83: if(ceiling_coll == 1)
      0000FC FArD1r01              1318 	ld	a, (#_ceiling_coll)
      0000FF 3D                    1319 	dec	a
      000100 20 0A                 1320 	jr	NZ, 00120$
                           000102  1321 	C$main.c$85$2_0$133	= .
                                   1322 	.globl	C$main.c$85$2_0$133
                                   1323 ;main.c:85: ySpeed = 0;
      000102 21rCFr01              1324 	ld	hl, #_ySpeed
      000105 36 00                 1325 	ld	(hl), #0x00
                           000107  1326 	C$main.c$86$2_0$133	= .
                                   1327 	.globl	C$main.c$86$2_0$133
                                   1328 ;main.c:86: ceiling_coll = 0;
      000107 21rD1r01              1329 	ld	hl, #_ceiling_coll
      00010A 36 00                 1330 	ld	(hl), #0x00
                           00010C  1331 	C$main.c$95$1_0$127	= .
                                   1332 	.globl	C$main.c$95$1_0$127
                                   1333 ;main.c:95: pY += ySpeed;
      00010C                       1334 00120$:
                           00010C  1335 	C$main.c$99$2_0$136	= .
                                   1336 	.globl	C$main.c$99$2_0$136
                                   1337 ;main.c:99: ySpeed = 0;
      00010C 21rCFr01              1338 	ld	hl, #_ySpeed
      00010F 36 00                 1339 	ld	(hl), #0x00
                           000111  1340 	C$main.c$100$2_0$136	= .
                                   1341 	.globl	C$main.c$100$2_0$136
                                   1342 ;main.c:100: ground_coll = 0;
      000111 21rD0r01              1343 	ld	hl, #_ground_coll
      000114 36 00                 1344 	ld	(hl), #0x00
                           000116  1345 	C$main.c$102$1_0$127	= .
                                   1346 	.globl	C$main.c$102$1_0$127
                                   1347 ;main.c:102: }
                           000116  1348 	C$main.c$102$1_0$127	= .
                                   1349 	.globl	C$main.c$102$1_0$127
                           000116  1350 	XG$basicmove$0$0	= .
                                   1351 	.globl	XG$basicmove$0$0
      000116 C9                    1352 	ret
                           000117  1353 	G$collision$0$0	= .
                                   1354 	.globl	G$collision$0$0
                           000117  1355 	C$main.c$104$1_0$138	= .
                                   1356 	.globl	C$main.c$104$1_0$138
                                   1357 ;main.c:104: int collision(void)
                                   1358 ;	---------------------------------
                                   1359 ; Function collision
                                   1360 ; ---------------------------------
      000117                       1361 _collision::
      000117 E8 F6                 1362 	add	sp, #-10
                           000119  1363 	C$main.c$106$4_0$143	= .
                                   1364 	.globl	C$main.c$106$4_0$143
                                   1365 ;main.c:106: for(int i = 0; i < WDT; i++)
      000119 AF                    1366 	xor	a, a
      00011A F8 08                 1367 	ldhl	sp,	#8
      00011C 22                    1368 	ld	(hl+), a
      00011D 77                    1369 	ld	(hl), a
      00011E                       1370 00137$:
      00011E F8 08                 1371 	ldhl	sp,	#8
      000120 7E                    1372 	ld	a, (hl)
      000121 D6 02                 1373 	sub	a, #0x02
      000123 23                    1374 	inc	hl
      000124 7E                    1375 	ld	a, (hl)
      000125 DE 00                 1376 	sbc	a, #0x00
      000127 56                    1377 	ld	d, (hl)
      000128 3E 00                 1378 	ld	a, #0x00
      00012A CB 7F                 1379 	bit	7,a
      00012C 28 07                 1380 	jr	Z, 00252$
      00012E CB 7A                 1381 	bit	7, d
      000130 20 08                 1382 	jr	NZ, 00253$
      000132 BF                    1383 	cp	a, a
      000133 18 05                 1384 	jr	00253$
      000135                       1385 00252$:
      000135 CB 7A                 1386 	bit	7, d
      000137 28 01                 1387 	jr	Z, 00253$
      000139 37                    1388 	scf
      00013A                       1389 00253$:
      00013A D2r99r02              1390 	jp	NC, 00107$
                           00013D  1391 	C$main.c$110$1_0$138	= .
                                   1392 	.globl	C$main.c$110$1_0$138
                                   1393 ;main.c:110: x_values[i] = (pX - 16 + i*8 + 1) >> 3;
      00013D F8 08                 1394 	ldhl	sp,	#8
      00013F 7E                    1395 	ld	a, (hl)
      000140 F8 02                 1396 	ldhl	sp,	#2
      000142 77                    1397 	ld	(hl), a
      000143 F8 09                 1398 	ldhl	sp,	#9
      000145 7E                    1399 	ld	a, (hl)
      000146 F8 03                 1400 	ldhl	sp,	#3
      000148 77                    1401 	ld	(hl), a
      000149 3E 03                 1402 	ld	a, #0x03
      00014B                       1403 00254$:
      00014B F8 02                 1404 	ldhl	sp,	#2
      00014D CB 26                 1405 	sla	(hl)
      00014F 23                    1406 	inc	hl
      000150 CB 16                 1407 	rl	(hl)
      000152 3D                    1408 	dec	a
      000153 20 F6                 1409 	jr	NZ, 00254$
      000155 FArCAr01              1410 	ld	a, (#_pX)
      000158 F8 04                 1411 	ldhl	sp,	#4
      00015A 77                    1412 	ld	(hl), a
      00015B AF                    1413 	xor	a, a
      00015C 23                    1414 	inc	hl
      00015D 77                    1415 	ld	(hl), a
                           00015E  1416 	C$main.c$108$3_0$140	= .
                                   1417 	.globl	C$main.c$108$3_0$140
                                   1418 ;main.c:108: if(i == 0)
      00015E F8 09                 1419 	ldhl	sp,	#9
      000160 3A                    1420 	ld	a, (hl-)
      000161 B6                    1421 	or	a, (hl)
      000162 20 5F                 1422 	jr	NZ, 00105$
                           000164  1423 	C$main.c$110$4_0$141	= .
                                   1424 	.globl	C$main.c$110$4_0$141
                                   1425 ;main.c:110: x_values[i] = (pX - 16 + i*8 + 1) >> 3;
                                   1426 ;c
      000164 11rD2r01              1427 	ld	de, #_x_values
      000167 2A                    1428 	ld	a, (hl+)
      000168 66                    1429 	ld	h, (hl)
      000169 6F                    1430 	ld	l, a
      00016A 19                    1431 	add	hl, de
      00016B 4D                    1432 	ld	c, l
      00016C 44                    1433 	ld	b, h
                                   1434 ;c
      00016D F8 02                 1435 	ldhl	sp,#2
      00016F 2A                    1436 	ld	a, (hl+)
      000170 5F                    1437 	ld	e, a
      000171 56                    1438 	ld	d, (hl)
      000172 21 F1 FF              1439 	ld	hl, #0xfff1
      000175 19                    1440 	add	hl, de
      000176 E5                    1441 	push	hl
      000177 7D                    1442 	ld	a, l
      000178 F8 08                 1443 	ldhl	sp,	#8
      00017A 77                    1444 	ld	(hl), a
      00017B E1                    1445 	pop	hl
      00017C 7C                    1446 	ld	a, h
      00017D F8 07                 1447 	ldhl	sp,	#7
                                   1448 ;c
      00017F 32                    1449 	ld	(hl-), a
      000180 2A                    1450 	ld	a, (hl+)
      000181 5F                    1451 	ld	e, a
      000182 56                    1452 	ld	d, (hl)
      000183 F8 04                 1453 	ldhl	sp,	#4
      000185 2A                    1454 	ld	a, (hl+)
      000186 66                    1455 	ld	h, (hl)
      000187 6F                    1456 	ld	l, a
      000188 19                    1457 	add	hl, de
      000189 5D                    1458 	ld	e, l
      00018A 54                    1459 	ld	d, h
      00018B CB 2A                 1460 	sra	d
      00018D CB 1B                 1461 	rr	e
      00018F CB 2A                 1462 	sra	d
      000191 CB 1B                 1463 	rr	e
      000193 CB 2A                 1464 	sra	d
      000195 CB 1B                 1465 	rr	e
      000197 7B                    1466 	ld	a, e
      000198 02                    1467 	ld	(bc), a
                           000199  1468 	C$main.c$111$4_0$141	= .
                                   1469 	.globl	C$main.c$111$4_0$141
                                   1470 ;main.c:111: xLast_values[i] = (xLast - 16 + i*8 + 1) >> 3;
                                   1471 ;c
      000199 11rD9r01              1472 	ld	de, #_xLast_values
      00019C F8 08                 1473 	ldhl	sp,	#8
      00019E 2A                    1474 	ld	a, (hl+)
      00019F 66                    1475 	ld	h, (hl)
      0001A0 6F                    1476 	ld	l, a
      0001A1 19                    1477 	add	hl, de
      0001A2 4D                    1478 	ld	c, l
      0001A3 44                    1479 	ld	b, h
      0001A4 21rCCr01              1480 	ld	hl, #_xLast
      0001A7 5E                    1481 	ld	e, (hl)
      0001A8 16 00                 1482 	ld	d, #0x00
                                   1483 ;c
      0001AA F8 06                 1484 	ldhl	sp,	#6
      0001AC 2A                    1485 	ld	a, (hl+)
      0001AD 66                    1486 	ld	h, (hl)
      0001AE 6F                    1487 	ld	l, a
      0001AF 19                    1488 	add	hl, de
      0001B0 5D                    1489 	ld	e, l
      0001B1 54                    1490 	ld	d, h
      0001B2 CB 2A                 1491 	sra	d
      0001B4 CB 1B                 1492 	rr	e
      0001B6 CB 2A                 1493 	sra	d
      0001B8 CB 1B                 1494 	rr	e
      0001BA CB 2A                 1495 	sra	d
      0001BC CB 1B                 1496 	rr	e
      0001BE 7B                    1497 	ld	a, e
      0001BF 02                    1498 	ld	(bc), a
      0001C0 C3r8Er02              1499 	jp	00138$
      0001C3                       1500 00105$:
                           0001C3  1501 	C$main.c$113$3_0$140	= .
                                   1502 	.globl	C$main.c$113$3_0$140
                                   1503 ;main.c:113: else if(i == WDT - 1)
      0001C3 F8 08                 1504 	ldhl	sp,	#8
      0001C5 7E                    1505 	ld	a, (hl)
      0001C6 3D                    1506 	dec	a
      0001C7 23                    1507 	inc	hl
      0001C8 B6                    1508 	or	a, (hl)
      0001C9 20 5F                 1509 	jr	NZ, 00102$
                           0001CB  1510 	C$main.c$115$4_0$142	= .
                                   1511 	.globl	C$main.c$115$4_0$142
                                   1512 ;main.c:115: x_values[i] = (pX - 16 + i*8 - 1) >> 3;
                                   1513 ;c
      0001CB 11rD2r01              1514 	ld	de, #_x_values
      0001CE F8 08                 1515 	ldhl	sp,	#8
      0001D0 2A                    1516 	ld	a, (hl+)
      0001D1 66                    1517 	ld	h, (hl)
      0001D2 6F                    1518 	ld	l, a
      0001D3 19                    1519 	add	hl, de
      0001D4 4D                    1520 	ld	c, l
      0001D5 44                    1521 	ld	b, h
                                   1522 ;c
      0001D6 F8 04                 1523 	ldhl	sp,#4
      0001D8 2A                    1524 	ld	a, (hl+)
      0001D9 5F                    1525 	ld	e, a
      0001DA 56                    1526 	ld	d, (hl)
      0001DB F8 02                 1527 	ldhl	sp,	#2
      0001DD 2A                    1528 	ld	a, (hl+)
      0001DE 66                    1529 	ld	h, (hl)
      0001DF 6F                    1530 	ld	l, a
      0001E0 19                    1531 	add	hl, de
      0001E1 5D                    1532 	ld	e, l
      0001E2 54                    1533 	ld	d, h
      0001E3 7B                    1534 	ld	a, e
      0001E4 C6 EF                 1535 	add	a, #0xef
      0001E6 5F                    1536 	ld	e, a
      0001E7 7A                    1537 	ld	a, d
      0001E8 CE FF                 1538 	adc	a, #0xff
      0001EA 57                    1539 	ld	d, a
      0001EB CB 2A                 1540 	sra	d
      0001ED CB 1B                 1541 	rr	e
      0001EF CB 2A                 1542 	sra	d
      0001F1 CB 1B                 1543 	rr	e
      0001F3 CB 2A                 1544 	sra	d
      0001F5 CB 1B                 1545 	rr	e
      0001F7 7B                    1546 	ld	a, e
      0001F8 02                    1547 	ld	(bc), a
                           0001F9  1548 	C$main.c$116$4_0$142	= .
                                   1549 	.globl	C$main.c$116$4_0$142
                                   1550 ;main.c:116: xLast_values[i] = (xLast - 16 + i*8 - 1) >> 3;
                                   1551 ;c
      0001F9 11rD9r01              1552 	ld	de, #_xLast_values
      0001FC F8 08                 1553 	ldhl	sp,	#8
      0001FE 2A                    1554 	ld	a, (hl+)
      0001FF 66                    1555 	ld	h, (hl)
      000200 6F                    1556 	ld	l, a
      000201 19                    1557 	add	hl, de
      000202 4D                    1558 	ld	c, l
      000203 44                    1559 	ld	b, h
      000204 21rCCr01              1560 	ld	hl, #_xLast
      000207 5E                    1561 	ld	e, (hl)
      000208 16 00                 1562 	ld	d, #0x00
                                   1563 ;c
      00020A F8 02                 1564 	ldhl	sp,	#2
      00020C 2A                    1565 	ld	a, (hl+)
      00020D 66                    1566 	ld	h, (hl)
      00020E 6F                    1567 	ld	l, a
      00020F 19                    1568 	add	hl, de
      000210 5D                    1569 	ld	e, l
      000211 54                    1570 	ld	d, h
      000212 7B                    1571 	ld	a, e
      000213 C6 EF                 1572 	add	a, #0xef
      000215 5F                    1573 	ld	e, a
      000216 7A                    1574 	ld	a, d
      000217 CE FF                 1575 	adc	a, #0xff
      000219 57                    1576 	ld	d, a
      00021A CB 2A                 1577 	sra	d
      00021C CB 1B                 1578 	rr	e
      00021E CB 2A                 1579 	sra	d
      000220 CB 1B                 1580 	rr	e
      000222 CB 2A                 1581 	sra	d
      000224 CB 1B                 1582 	rr	e
      000226 7B                    1583 	ld	a, e
      000227 02                    1584 	ld	(bc), a
      000228 18 64                 1585 	jr	00138$
      00022A                       1586 00102$:
                           00022A  1587 	C$main.c$120$4_0$143	= .
                                   1588 	.globl	C$main.c$120$4_0$143
                                   1589 ;main.c:120: x_values[i] = (pX - 16 + i*8) >> 3;
                                   1590 ;c
      00022A 11rD2r01              1591 	ld	de, #_x_values
      00022D F8 08                 1592 	ldhl	sp,	#8
      00022F 2A                    1593 	ld	a, (hl+)
      000230 66                    1594 	ld	h, (hl)
      000231 6F                    1595 	ld	l, a
      000232 19                    1596 	add	hl, de
      000233 4D                    1597 	ld	c, l
      000234 44                    1598 	ld	b, h
      000235 F8 04                 1599 	ldhl	sp,#4
      000237 2A                    1600 	ld	a, (hl+)
      000238 5F                    1601 	ld	e, a
      000239 56                    1602 	ld	d, (hl)
      00023A 21 10 00              1603 	ld	hl, #0x0010
      00023D 7B                    1604 	ld	a, e
      00023E 95                    1605 	sub	a, l
      00023F 5F                    1606 	ld	e, a
      000240 7A                    1607 	ld	a, d
      000241 9C                    1608 	sbc	a, h
      000242 F8 07                 1609 	ldhl	sp,	#7
      000244 32                    1610 	ld	(hl-), a
                                   1611 ;c
      000245 7B                    1612 	ld	a, e
      000246 22                    1613 	ld	(hl+), a
      000247 2B                    1614 	dec	hl
      000248 2A                    1615 	ld	a, (hl+)
      000249 5F                    1616 	ld	e, a
      00024A 56                    1617 	ld	d, (hl)
      00024B F8 02                 1618 	ldhl	sp,	#2
      00024D 2A                    1619 	ld	a, (hl+)
      00024E 66                    1620 	ld	h, (hl)
      00024F 6F                    1621 	ld	l, a
      000250 19                    1622 	add	hl, de
      000251 5D                    1623 	ld	e, l
      000252 54                    1624 	ld	d, h
      000253 CB 2A                 1625 	sra	d
      000255 CB 1B                 1626 	rr	e
      000257 CB 2A                 1627 	sra	d
      000259 CB 1B                 1628 	rr	e
      00025B CB 2A                 1629 	sra	d
      00025D CB 1B                 1630 	rr	e
      00025F 7B                    1631 	ld	a, e
      000260 02                    1632 	ld	(bc), a
                           000261  1633 	C$main.c$121$4_0$143	= .
                                   1634 	.globl	C$main.c$121$4_0$143
                                   1635 ;main.c:121: xLast_values[i] = (xLast - 16 + i*8) >> 3;
                                   1636 ;c
      000261 11rD9r01              1637 	ld	de, #_xLast_values
      000264 F8 08                 1638 	ldhl	sp,	#8
      000266 2A                    1639 	ld	a, (hl+)
      000267 66                    1640 	ld	h, (hl)
      000268 6F                    1641 	ld	l, a
      000269 19                    1642 	add	hl, de
      00026A 4D                    1643 	ld	c, l
      00026B 44                    1644 	ld	b, h
      00026C FArCCr01              1645 	ld	a, (#_xLast)
      00026F 16 00                 1646 	ld	d, #0x00
      000271 C6 F0                 1647 	add	a, #0xf0
      000273 5F                    1648 	ld	e, a
      000274 7A                    1649 	ld	a, d
      000275 CE FF                 1650 	adc	a, #0xff
      000277 57                    1651 	ld	d, a
                                   1652 ;c
      000278 F8 02                 1653 	ldhl	sp,	#2
      00027A 2A                    1654 	ld	a, (hl+)
      00027B 66                    1655 	ld	h, (hl)
      00027C 6F                    1656 	ld	l, a
      00027D 19                    1657 	add	hl, de
      00027E 5D                    1658 	ld	e, l
      00027F 54                    1659 	ld	d, h
      000280 CB 2A                 1660 	sra	d
      000282 CB 1B                 1661 	rr	e
      000284 CB 2A                 1662 	sra	d
      000286 CB 1B                 1663 	rr	e
      000288 CB 2A                 1664 	sra	d
      00028A CB 1B                 1665 	rr	e
      00028C 7B                    1666 	ld	a, e
      00028D 02                    1667 	ld	(bc), a
      00028E                       1668 00138$:
                           00028E  1669 	C$main.c$106$2_0$139	= .
                                   1670 	.globl	C$main.c$106$2_0$139
                                   1671 ;main.c:106: for(int i = 0; i < WDT; i++)
      00028E F8 08                 1672 	ldhl	sp,	#8
      000290 34                    1673 	inc	(hl)
      000291 C2r1Er01              1674 	jp	NZ,00137$
      000294 23                    1675 	inc	hl
      000295 34                    1676 	inc	(hl)
      000296 C3r1Er01              1677 	jp	00137$
      000299                       1678 00107$:
                           000299  1679 	C$main.c$124$4_0$148	= .
                                   1680 	.globl	C$main.c$124$4_0$148
                                   1681 ;main.c:124: for(int i = 0; i < HGT; i++)
      000299 01 00 00              1682 	ld	bc, #0x0000
      00029C                       1683 00140$:
      00029C 79                    1684 	ld	a, c
      00029D D6 05                 1685 	sub	a, #0x05
      00029F 78                    1686 	ld	a, b
      0002A0 17                    1687 	rla
      0002A1 3F                    1688 	ccf
      0002A2 1F                    1689 	rra
      0002A3 DE 80                 1690 	sbc	a, #0x80
      0002A5 D2r18r04              1691 	jp	NC, 00114$
                           0002A8  1692 	C$main.c$128$1_0$138	= .
                                   1693 	.globl	C$main.c$128$1_0$138
                                   1694 ;main.c:128: y_values[i] = (pY - 24 + i*8 + 1) >> 3;
      0002A8 F8 04                 1695 	ldhl	sp,	#4
      0002AA 79                    1696 	ld	a, c
      0002AB 22                    1697 	ld	(hl+), a
      0002AC 70                    1698 	ld	(hl), b
      0002AD 3E 03                 1699 	ld	a, #0x03
      0002AF                       1700 00258$:
      0002AF F8 04                 1701 	ldhl	sp,	#4
      0002B1 CB 26                 1702 	sla	(hl)
      0002B3 23                    1703 	inc	hl
      0002B4 CB 16                 1704 	rl	(hl)
      0002B6 3D                    1705 	dec	a
      0002B7 20 F6                 1706 	jr	NZ, 00258$
      0002B9 21rCBr01              1707 	ld	hl, #_pY
      0002BC 5E                    1708 	ld	e, (hl)
      0002BD 16 00                 1709 	ld	d, #0x00
                           0002BF  1710 	C$main.c$126$3_0$145	= .
                                   1711 	.globl	C$main.c$126$3_0$145
                                   1712 ;main.c:126: if(i == 0)
      0002BF 78                    1713 	ld	a, b
      0002C0 B1                    1714 	or	a, c
      0002C1 20 73                 1715 	jr	NZ, 00112$
                           0002C3  1716 	C$main.c$128$4_0$146	= .
                                   1717 	.globl	C$main.c$128$4_0$146
                                   1718 ;main.c:128: y_values[i] = (pY - 24 + i*8 + 1) >> 3;
      0002C3 21rD4r01              1719 	ld	hl, #_y_values
      0002C6 09                    1720 	add	hl, bc
      0002C7 E5                    1721 	push	hl
      0002C8 7D                    1722 	ld	a, l
      0002C9 F8 08                 1723 	ldhl	sp,	#8
      0002CB 77                    1724 	ld	(hl), a
      0002CC E1                    1725 	pop	hl
      0002CD 7C                    1726 	ld	a, h
      0002CE F8 07                 1727 	ldhl	sp,	#7
      0002D0 77                    1728 	ld	(hl), a
      0002D1 D5                    1729 	push	de
                                   1730 ;c
      0002D2 2B                    1731 	dec	hl
      0002D3 2B                    1732 	dec	hl
      0002D4 2B                    1733 	dec	hl
      0002D5 2A                    1734 	ld	a, (hl+)
      0002D6 5F                    1735 	ld	e, a
      0002D7 56                    1736 	ld	d, (hl)
      0002D8 21 E9 FF              1737 	ld	hl, #0xffe9
      0002DB 19                    1738 	add	hl, de
      0002DC D1                    1739 	pop	de
      0002DD E5                    1740 	push	hl
      0002DE 7D                    1741 	ld	a, l
      0002DF F8 0A                 1742 	ldhl	sp,	#10
      0002E1 77                    1743 	ld	(hl), a
      0002E2 E1                    1744 	pop	hl
      0002E3 7C                    1745 	ld	a, h
      0002E4 F8 09                 1746 	ldhl	sp,	#9
                                   1747 ;c
      0002E6 32                    1748 	ld	(hl-), a
      0002E7 2A                    1749 	ld	a, (hl+)
      0002E8 66                    1750 	ld	h, (hl)
      0002E9 6F                    1751 	ld	l, a
      0002EA 19                    1752 	add	hl, de
      0002EB 5D                    1753 	ld	e, l
      0002EC 54                    1754 	ld	d, h
      0002ED CB 2A                 1755 	sra	d
      0002EF CB 1B                 1756 	rr	e
      0002F1 CB 2A                 1757 	sra	d
      0002F3 CB 1B                 1758 	rr	e
      0002F5 CB 2A                 1759 	sra	d
      0002F7 CB 1B                 1760 	rr	e
      0002F9 7B                    1761 	ld	a, e
      0002FA F8 06                 1762 	ldhl	sp,	#6
      0002FC F5                    1763 	push	af
      0002FD 2A                    1764 	ld	a, (hl+)
      0002FE 66                    1765 	ld	h, (hl)
      0002FF 6F                    1766 	ld	l, a
      000300 F1                    1767 	pop	af
      000301 77                    1768 	ld	(hl), a
                           000302  1769 	C$main.c$129$4_0$146	= .
                                   1770 	.globl	C$main.c$129$4_0$146
                                   1771 ;main.c:129: yLast_values[i] = (yLast - 24 + i*8 + 1) >>3;
      000302 21rDBr01              1772 	ld	hl, #_yLast_values
      000305 09                    1773 	add	hl, bc
      000306 E5                    1774 	push	hl
      000307 7D                    1775 	ld	a, l
      000308 F8 08                 1776 	ldhl	sp,	#8
      00030A 77                    1777 	ld	(hl), a
      00030B E1                    1778 	pop	hl
      00030C 7C                    1779 	ld	a, h
      00030D F8 07                 1780 	ldhl	sp,	#7
      00030F 77                    1781 	ld	(hl), a
      000310 21rCDr01              1782 	ld	hl, #_yLast
      000313 5E                    1783 	ld	e, (hl)
      000314 16 00                 1784 	ld	d, #0x00
                                   1785 ;c
      000316 F8 08                 1786 	ldhl	sp,	#8
      000318 2A                    1787 	ld	a, (hl+)
      000319 66                    1788 	ld	h, (hl)
      00031A 6F                    1789 	ld	l, a
      00031B 19                    1790 	add	hl, de
      00031C 5D                    1791 	ld	e, l
      00031D 54                    1792 	ld	d, h
      00031E CB 2A                 1793 	sra	d
      000320 CB 1B                 1794 	rr	e
      000322 CB 2A                 1795 	sra	d
      000324 CB 1B                 1796 	rr	e
      000326 CB 2A                 1797 	sra	d
      000328 CB 1B                 1798 	rr	e
      00032A 7B                    1799 	ld	a, e
      00032B F8 06                 1800 	ldhl	sp,	#6
      00032D F5                    1801 	push	af
      00032E 2A                    1802 	ld	a, (hl+)
      00032F 66                    1803 	ld	h, (hl)
      000330 6F                    1804 	ld	l, a
      000331 F1                    1805 	pop	af
      000332 77                    1806 	ld	(hl), a
      000333 C3r14r04              1807 	jp	00141$
      000336                       1808 00112$:
                           000336  1809 	C$main.c$131$3_0$145	= .
                                   1810 	.globl	C$main.c$131$3_0$145
                                   1811 ;main.c:131: else if(i == HGT - 1)
      000336 79                    1812 	ld	a, c
      000337 D6 04                 1813 	sub	a, #0x04
      000339 B0                    1814 	or	a, b
      00033A 20 6E                 1815 	jr	NZ, 00109$
                           00033C  1816 	C$main.c$133$4_0$147	= .
                                   1817 	.globl	C$main.c$133$4_0$147
                                   1818 ;main.c:133: y_values[i] = (pY - 24 + i*8 - 1) >> 3;
      00033C 21rD4r01              1819 	ld	hl, #_y_values
      00033F 09                    1820 	add	hl, bc
      000340 E5                    1821 	push	hl
      000341 7D                    1822 	ld	a, l
      000342 F8 0A                 1823 	ldhl	sp,	#10
      000344 77                    1824 	ld	(hl), a
      000345 E1                    1825 	pop	hl
      000346 7C                    1826 	ld	a, h
      000347 F8 09                 1827 	ldhl	sp,	#9
      000349 77                    1828 	ld	(hl), a
                                   1829 ;c
      00034A F8 04                 1830 	ldhl	sp,	#4
      00034C 2A                    1831 	ld	a, (hl+)
      00034D 66                    1832 	ld	h, (hl)
      00034E 6F                    1833 	ld	l, a
      00034F 19                    1834 	add	hl, de
      000350 5D                    1835 	ld	e, l
      000351 54                    1836 	ld	d, h
      000352 7B                    1837 	ld	a, e
      000353 C6 E7                 1838 	add	a, #0xe7
      000355 5F                    1839 	ld	e, a
      000356 7A                    1840 	ld	a, d
      000357 CE FF                 1841 	adc	a, #0xff
      000359 57                    1842 	ld	d, a
      00035A CB 2A                 1843 	sra	d
      00035C CB 1B                 1844 	rr	e
      00035E CB 2A                 1845 	sra	d
      000360 CB 1B                 1846 	rr	e
      000362 CB 2A                 1847 	sra	d
      000364 CB 1B                 1848 	rr	e
      000366 7B                    1849 	ld	a, e
      000367 F8 08                 1850 	ldhl	sp,	#8
      000369 F5                    1851 	push	af
      00036A 2A                    1852 	ld	a, (hl+)
      00036B 66                    1853 	ld	h, (hl)
      00036C 6F                    1854 	ld	l, a
      00036D F1                    1855 	pop	af
      00036E 77                    1856 	ld	(hl), a
                           00036F  1857 	C$main.c$134$4_0$147	= .
                                   1858 	.globl	C$main.c$134$4_0$147
                                   1859 ;main.c:134: yLast_values[i] = (yLast - 24 + i*8 - 1) >>3;
      00036F 21rDBr01              1860 	ld	hl, #_yLast_values
      000372 09                    1861 	add	hl, bc
      000373 E5                    1862 	push	hl
      000374 7D                    1863 	ld	a, l
      000375 F8 0A                 1864 	ldhl	sp,	#10
      000377 77                    1865 	ld	(hl), a
      000378 E1                    1866 	pop	hl
      000379 7C                    1867 	ld	a, h
      00037A F8 09                 1868 	ldhl	sp,	#9
      00037C 77                    1869 	ld	(hl), a
      00037D 21rCDr01              1870 	ld	hl, #_yLast
      000380 5E                    1871 	ld	e, (hl)
      000381 16 00                 1872 	ld	d, #0x00
                                   1873 ;c
      000383 F8 04                 1874 	ldhl	sp,	#4
      000385 2A                    1875 	ld	a, (hl+)
      000386 66                    1876 	ld	h, (hl)
      000387 6F                    1877 	ld	l, a
      000388 19                    1878 	add	hl, de
      000389 5D                    1879 	ld	e, l
      00038A 54                    1880 	ld	d, h
      00038B 7B                    1881 	ld	a, e
      00038C C6 E7                 1882 	add	a, #0xe7
      00038E 5F                    1883 	ld	e, a
      00038F 7A                    1884 	ld	a, d
      000390 CE FF                 1885 	adc	a, #0xff
      000392 57                    1886 	ld	d, a
      000393 CB 2A                 1887 	sra	d
      000395 CB 1B                 1888 	rr	e
      000397 CB 2A                 1889 	sra	d
      000399 CB 1B                 1890 	rr	e
      00039B CB 2A                 1891 	sra	d
      00039D CB 1B                 1892 	rr	e
      00039F 7B                    1893 	ld	a, e
      0003A0 F8 08                 1894 	ldhl	sp,	#8
      0003A2 F5                    1895 	push	af
      0003A3 2A                    1896 	ld	a, (hl+)
      0003A4 66                    1897 	ld	h, (hl)
      0003A5 6F                    1898 	ld	l, a
      0003A6 F1                    1899 	pop	af
      0003A7 77                    1900 	ld	(hl), a
      0003A8 18 6A                 1901 	jr	00141$
      0003AA                       1902 00109$:
                           0003AA  1903 	C$main.c$138$4_0$148	= .
                                   1904 	.globl	C$main.c$138$4_0$148
                                   1905 ;main.c:138: y_values[i] = (pY - 24 + i*8) >> 3;
      0003AA 21rD4r01              1906 	ld	hl, #_y_values
      0003AD 09                    1907 	add	hl, bc
      0003AE E5                    1908 	push	hl
      0003AF 7D                    1909 	ld	a, l
      0003B0 F8 0A                 1910 	ldhl	sp,	#10
      0003B2 77                    1911 	ld	(hl), a
      0003B3 E1                    1912 	pop	hl
      0003B4 7C                    1913 	ld	a, h
      0003B5 F8 09                 1914 	ldhl	sp,	#9
      0003B7 77                    1915 	ld	(hl), a
      0003B8 7B                    1916 	ld	a, e
      0003B9 C6 E8                 1917 	add	a, #0xe8
      0003BB 5F                    1918 	ld	e, a
      0003BC 7A                    1919 	ld	a, d
      0003BD CE FF                 1920 	adc	a, #0xff
      0003BF 57                    1921 	ld	d, a
                                   1922 ;c
      0003C0 F8 04                 1923 	ldhl	sp,	#4
      0003C2 2A                    1924 	ld	a, (hl+)
      0003C3 66                    1925 	ld	h, (hl)
      0003C4 6F                    1926 	ld	l, a
      0003C5 19                    1927 	add	hl, de
      0003C6 5D                    1928 	ld	e, l
      0003C7 54                    1929 	ld	d, h
      0003C8 CB 2A                 1930 	sra	d
      0003CA CB 1B                 1931 	rr	e
      0003CC CB 2A                 1932 	sra	d
      0003CE CB 1B                 1933 	rr	e
      0003D0 CB 2A                 1934 	sra	d
      0003D2 CB 1B                 1935 	rr	e
      0003D4 7B                    1936 	ld	a, e
      0003D5 F8 08                 1937 	ldhl	sp,	#8
      0003D7 F5                    1938 	push	af
      0003D8 2A                    1939 	ld	a, (hl+)
      0003D9 66                    1940 	ld	h, (hl)
      0003DA 6F                    1941 	ld	l, a
      0003DB F1                    1942 	pop	af
      0003DC 77                    1943 	ld	(hl), a
                           0003DD  1944 	C$main.c$139$4_0$148	= .
                                   1945 	.globl	C$main.c$139$4_0$148
                                   1946 ;main.c:139: yLast_values[i] = (yLast - 24 + i*8) >>3;
      0003DD 21rDBr01              1947 	ld	hl, #_yLast_values
      0003E0 09                    1948 	add	hl, bc
      0003E1 E5                    1949 	push	hl
      0003E2 7D                    1950 	ld	a, l
      0003E3 F8 0A                 1951 	ldhl	sp,	#10
      0003E5 77                    1952 	ld	(hl), a
      0003E6 E1                    1953 	pop	hl
      0003E7 7C                    1954 	ld	a, h
      0003E8 F8 09                 1955 	ldhl	sp,	#9
      0003EA 77                    1956 	ld	(hl), a
      0003EB FArCDr01              1957 	ld	a, (#_yLast)
      0003EE 16 00                 1958 	ld	d, #0x00
      0003F0 C6 E8                 1959 	add	a, #0xe8
      0003F2 5F                    1960 	ld	e, a
      0003F3 7A                    1961 	ld	a, d
      0003F4 CE FF                 1962 	adc	a, #0xff
      0003F6 57                    1963 	ld	d, a
                                   1964 ;c
      0003F7 F8 04                 1965 	ldhl	sp,	#4
      0003F9 2A                    1966 	ld	a, (hl+)
      0003FA 66                    1967 	ld	h, (hl)
      0003FB 6F                    1968 	ld	l, a
      0003FC 19                    1969 	add	hl, de
      0003FD 5D                    1970 	ld	e, l
      0003FE 54                    1971 	ld	d, h
      0003FF CB 2A                 1972 	sra	d
      000401 CB 1B                 1973 	rr	e
      000403 CB 2A                 1974 	sra	d
      000405 CB 1B                 1975 	rr	e
      000407 CB 2A                 1976 	sra	d
      000409 CB 1B                 1977 	rr	e
      00040B 7B                    1978 	ld	a, e
      00040C F8 08                 1979 	ldhl	sp,	#8
      00040E F5                    1980 	push	af
      00040F 2A                    1981 	ld	a, (hl+)
      000410 66                    1982 	ld	h, (hl)
      000411 6F                    1983 	ld	l, a
      000412 F1                    1984 	pop	af
      000413 77                    1985 	ld	(hl), a
      000414                       1986 00141$:
                           000414  1987 	C$main.c$124$2_0$144	= .
                                   1988 	.globl	C$main.c$124$2_0$144
                                   1989 ;main.c:124: for(int i = 0; i < HGT; i++)
      000414 03                    1990 	inc	bc
      000415 C3r9Cr02              1991 	jp	00140$
      000418                       1992 00114$:
                           000418  1993 	C$main.c$143$3_0$149	= .
                                   1994 	.globl	C$main.c$143$3_0$149
                                   1995 ;main.c:143: for(int i = 0; i < HGT; i++)
      000418 AF                    1996 	xor	a, a
      000419 F8 06                 1997 	ldhl	sp,	#6
      00041B 22                    1998 	ld	(hl+), a
      00041C 77                    1999 	ld	(hl), a
      00041D                       2000 00146$:
      00041D F8 06                 2001 	ldhl	sp,	#6
      00041F 7E                    2002 	ld	a, (hl)
      000420 D6 05                 2003 	sub	a, #0x05
      000422 23                    2004 	inc	hl
      000423 7E                    2005 	ld	a, (hl)
      000424 DE 00                 2006 	sbc	a, #0x00
      000426 56                    2007 	ld	d, (hl)
      000427 3E 00                 2008 	ld	a, #0x00
      000429 CB 7F                 2009 	bit	7,a
      00042B 28 07                 2010 	jr	Z, 00261$
      00042D CB 7A                 2011 	bit	7, d
      00042F 20 08                 2012 	jr	NZ, 00262$
      000431 BF                    2013 	cp	a, a
      000432 18 05                 2014 	jr	00262$
      000434                       2015 00261$:
      000434 CB 7A                 2016 	bit	7, d
      000436 28 01                 2017 	jr	Z, 00262$
      000438 37                    2018 	scf
      000439                       2019 00262$:
      000439 D2r84r05              2020 	jp	NC, 00135$
                           00043C  2021 	C$main.c$145$5_0$151	= .
                                   2022 	.globl	C$main.c$145$5_0$151
                                   2023 ;main.c:145: for(int c = 0; c < WDT; c++)
      00043C AF                    2024 	xor	a, a
      00043D F8 08                 2025 	ldhl	sp,	#8
      00043F 22                    2026 	ld	(hl+), a
      000440 77                    2027 	ld	(hl), a
      000441                       2028 00143$:
      000441 F8 08                 2029 	ldhl	sp,	#8
      000443 7E                    2030 	ld	a, (hl)
      000444 D6 02                 2031 	sub	a, #0x02
      000446 23                    2032 	inc	hl
      000447 7E                    2033 	ld	a, (hl)
      000448 DE 00                 2034 	sbc	a, #0x00
      00044A 56                    2035 	ld	d, (hl)
      00044B 3E 00                 2036 	ld	a, #0x00
      00044D CB 7F                 2037 	bit	7,a
      00044F 28 07                 2038 	jr	Z, 00263$
      000451 CB 7A                 2039 	bit	7, d
      000453 20 08                 2040 	jr	NZ, 00264$
      000455 BF                    2041 	cp	a, a
      000456 18 05                 2042 	jr	00264$
      000458                       2043 00263$:
      000458 CB 7A                 2044 	bit	7, d
      00045A 28 01                 2045 	jr	Z, 00264$
      00045C 37                    2046 	scf
      00045D                       2047 00264$:
      00045D D2r79r05              2048 	jp	NC, 00147$
                           000460  2049 	C$main.c$147$1_0$138	= .
                                   2050 	.globl	C$main.c$147$1_0$138
                                   2051 ;main.c:147: if(testmap[(y_values[i])*20 + x_values[c]] == 3)
                                   2052 ;c
      000460 11rD4r01              2053 	ld	de, #_y_values
      000463 F8 06                 2054 	ldhl	sp,	#6
      000465 2A                    2055 	ld	a, (hl+)
      000466 66                    2056 	ld	h, (hl)
      000467 6F                    2057 	ld	l, a
      000468 19                    2058 	add	hl, de
      000469 33                    2059 	inc	sp
      00046A 33                    2060 	inc	sp
      00046B 5D                    2061 	ld	e, l
      00046C 54                    2062 	ld	d, h
      00046D D5                    2063 	push	de
      00046E 1A                    2064 	ld	a, (de)
      00046F 4F                    2065 	ld	c, a
      000470 06 00                 2066 	ld	b, #0x00
      000472 69                    2067 	ld	l, c
      000473 60                    2068 	ld	h, b
      000474 29                    2069 	add	hl, hl
      000475 29                    2070 	add	hl, hl
      000476 09                    2071 	add	hl, bc
      000477 29                    2072 	add	hl, hl
      000478 29                    2073 	add	hl, hl
      000479 E5                    2074 	push	hl
      00047A 7D                    2075 	ld	a, l
      00047B F8 06                 2076 	ldhl	sp,	#6
      00047D 77                    2077 	ld	(hl), a
      00047E E1                    2078 	pop	hl
      00047F 7C                    2079 	ld	a, h
      000480 F8 05                 2080 	ldhl	sp,	#5
      000482 77                    2081 	ld	(hl), a
                                   2082 ;c
      000483 11rD2r01              2083 	ld	de, #_x_values
      000486 F8 08                 2084 	ldhl	sp,	#8
      000488 2A                    2085 	ld	a, (hl+)
      000489 66                    2086 	ld	h, (hl)
      00048A 6F                    2087 	ld	l, a
      00048B 19                    2088 	add	hl, de
      00048C 4E                    2089 	ld	c, (hl)
      00048D F8 02                 2090 	ldhl	sp,	#2
      00048F 71                    2091 	ld	(hl), c
      000490 AF                    2092 	xor	a, a
      000491 23                    2093 	inc	hl
                                   2094 ;c
      000492 32                    2095 	ld	(hl-), a
      000493 2A                    2096 	ld	a, (hl+)
      000494 5F                    2097 	ld	e, a
      000495 2A                    2098 	ld	a, (hl+)
      000496 57                    2099 	ld	d, a
      000497 2A                    2100 	ld	a, (hl+)
      000498 66                    2101 	ld	h, (hl)
      000499 6F                    2102 	ld	l, a
      00049A 19                    2103 	add	hl, de
      00049B 5D                    2104 	ld	e, l
      00049C 54                    2105 	ld	d, h
      00049D 21r60r00              2106 	ld	hl, #_testmap
      0004A0 19                    2107 	add	hl, de
      0004A1 7E                    2108 	ld	a, (hl)
      0004A2 D6 03                 2109 	sub	a, #0x03
      0004A4 C2r5Ar05              2110 	jp	NZ,00130$
                           0004A7  2111 	C$main.c$149$6_0$153	= .
                                   2112 	.globl	C$main.c$149$6_0$153
                                   2113 ;main.c:149: if(testmap[(yLast_values[i])*20 + x_values[c]] == 3)
                                   2114 ;c
      0004A7 11rDBr01              2115 	ld	de, #_yLast_values
      0004AA F8 06                 2116 	ldhl	sp,	#6
      0004AC 2A                    2117 	ld	a, (hl+)
      0004AD 66                    2118 	ld	h, (hl)
      0004AE 6F                    2119 	ld	l, a
      0004AF 19                    2120 	add	hl, de
      0004B0 5D                    2121 	ld	e, l
      0004B1 54                    2122 	ld	d, h
      0004B2 1A                    2123 	ld	a, (de)
      0004B3 6F                    2124 	ld	l, a
      0004B4 26 00                 2125 	ld	h, #0x00
      0004B6 5D                    2126 	ld	e, l
      0004B7 54                    2127 	ld	d, h
      0004B8 29                    2128 	add	hl, hl
      0004B9 29                    2129 	add	hl, hl
      0004BA 19                    2130 	add	hl, de
      0004BB 29                    2131 	add	hl, hl
      0004BC 29                    2132 	add	hl, hl
      0004BD E5                    2133 	push	hl
      0004BE 7D                    2134 	ld	a, l
      0004BF F8 06                 2135 	ldhl	sp,	#6
      0004C1 77                    2136 	ld	(hl), a
      0004C2 E1                    2137 	pop	hl
      0004C3 7C                    2138 	ld	a, h
      0004C4 F8 05                 2139 	ldhl	sp,	#5
      0004C6 77                    2140 	ld	(hl), a
                                   2141 ;c
      0004C7 F8 04                 2142 	ldhl	sp,#4
      0004C9 2A                    2143 	ld	a, (hl+)
      0004CA 5F                    2144 	ld	e, a
      0004CB 56                    2145 	ld	d, (hl)
      0004CC F8 02                 2146 	ldhl	sp,	#2
      0004CE 2A                    2147 	ld	a, (hl+)
      0004CF 66                    2148 	ld	h, (hl)
      0004D0 6F                    2149 	ld	l, a
      0004D1 19                    2150 	add	hl, de
      0004D2 5D                    2151 	ld	e, l
      0004D3 54                    2152 	ld	d, h
      0004D4 21r60r00              2153 	ld	hl, #_testmap
      0004D7 19                    2154 	add	hl, de
      0004D8 7E                    2155 	ld	a, (hl)
      0004D9 D6 03                 2156 	sub	a, #0x03
      0004DB 20 24                 2157 	jr	NZ, 00121$
                           0004DD  2158 	C$main.c$154$1_0$138	= .
                                   2159 	.globl	C$main.c$154$1_0$138
                                   2160 ;main.c:154: pX = (x_values[c] << 3) + 24;
      0004DD F8 05                 2161 	ldhl	sp,	#5
      0004DF 71                    2162 	ld	(hl), c
      0004E0 7E                    2163 	ld	a, (hl)
      0004E1 87                    2164 	add	a, a
      0004E2 87                    2165 	add	a, a
      0004E3 87                    2166 	add	a, a
      0004E4 4F                    2167 	ld	c, a
                           0004E5  2168 	C$main.c$152$7_0$154	= .
                                   2169 	.globl	C$main.c$152$7_0$154
                                   2170 ;main.c:152: if(c == 0)
      0004E5 F8 09                 2171 	ldhl	sp,	#9
      0004E7 3A                    2172 	ld	a, (hl-)
      0004E8 B6                    2173 	or	a, (hl)
      0004E9 20 08                 2174 	jr	NZ, 00118$
                           0004EB  2175 	C$main.c$154$8_0$155	= .
                                   2176 	.globl	C$main.c$154$8_0$155
                                   2177 ;main.c:154: pX = (x_values[c] << 3) + 24;
      0004EB 79                    2178 	ld	a, c
      0004EC C6 18                 2179 	add	a, #0x18
      0004EE EArCAr01              2180 	ld	(#_pX),a
      0004F1 18 0E                 2181 	jr	00121$
      0004F3                       2182 00118$:
                           0004F3  2183 	C$main.c$156$7_0$154	= .
                                   2184 	.globl	C$main.c$156$7_0$154
                                   2185 ;main.c:156: else if(c == WDT - 1)
      0004F3 F8 08                 2186 	ldhl	sp,	#8
      0004F5 7E                    2187 	ld	a, (hl)
      0004F6 3D                    2188 	dec	a
      0004F7 23                    2189 	inc	hl
      0004F8 B6                    2190 	or	a, (hl)
      0004F9 20 06                 2191 	jr	NZ, 00121$
                           0004FB  2192 	C$main.c$158$8_0$156	= .
                                   2193 	.globl	C$main.c$158$8_0$156
                                   2194 ;main.c:158: pX = (x_values[c] << 3) - (WDT - 3)*8;
      0004FB 79                    2195 	ld	a, c
      0004FC C6 08                 2196 	add	a, #0x08
      0004FE EArCAr01              2197 	ld	(#_pX),a
      000501                       2198 00121$:
                           000501  2199 	C$main.c$161$6_0$153	= .
                                   2200 	.globl	C$main.c$161$6_0$153
                                   2201 ;main.c:161: if(testmap[(y_values[i])*20 + xLast_values[c]] == 3)
      000501 D1                    2202 	pop	de
      000502 D5                    2203 	push	de
      000503 1A                    2204 	ld	a, (de)
      000504 F8 05                 2205 	ldhl	sp,	#5
      000506 77                    2206 	ld	(hl), a
      000507 4E                    2207 	ld	c, (hl)
      000508 06 00                 2208 	ld	b, #0x00
      00050A 69                    2209 	ld	l, c
      00050B 60                    2210 	ld	h, b
      00050C 29                    2211 	add	hl, hl
      00050D 29                    2212 	add	hl, hl
      00050E 09                    2213 	add	hl, bc
      00050F 29                    2214 	add	hl, hl
      000510 29                    2215 	add	hl, hl
      000511 4D                    2216 	ld	c, l
      000512 44                    2217 	ld	b, h
                                   2218 ;c
      000513 11rD9r01              2219 	ld	de, #_xLast_values
      000516 F8 08                 2220 	ldhl	sp,	#8
      000518 2A                    2221 	ld	a, (hl+)
      000519 66                    2222 	ld	h, (hl)
      00051A 6F                    2223 	ld	l, a
      00051B 19                    2224 	add	hl, de
      00051C 5D                    2225 	ld	e, l
      00051D 54                    2226 	ld	d, h
      00051E 1A                    2227 	ld	a, (de)
      00051F 6F                    2228 	ld	l, a
      000520 26 00                 2229 	ld	h, #0x00
      000522 09                    2230 	add	hl, bc
      000523 11r60r00              2231 	ld	de, #_testmap
      000526 19                    2232 	add	hl, de
      000527 7E                    2233 	ld	a, (hl)
      000528 D6 03                 2234 	sub	a, #0x03
      00052A 20 2E                 2235 	jr	NZ, 00130$
                           00052C  2236 	C$main.c$164$7_0$157	= .
                                   2237 	.globl	C$main.c$164$7_0$157
                                   2238 ;main.c:164: if(i == 0)
      00052C F8 07                 2239 	ldhl	sp,	#7
      00052E 3A                    2240 	ld	a, (hl-)
      00052F B6                    2241 	or	a, (hl)
      000530 20 11                 2242 	jr	NZ, 00125$
                           000532  2243 	C$main.c$166$8_0$158	= .
                                   2244 	.globl	C$main.c$166$8_0$158
                                   2245 ;main.c:166: pY = (y_values[i] << 3) + 32;
      000532 2B                    2246 	dec	hl
      000533 7E                    2247 	ld	a, (hl)
      000534 87                    2248 	add	a, a
      000535 87                    2249 	add	a, a
      000536 87                    2250 	add	a, a
      000537 C6 20                 2251 	add	a, #0x20
      000539 EArCBr01              2252 	ld	(#_pY),a
                           00053C  2253 	C$main.c$167$8_0$158	= .
                                   2254 	.globl	C$main.c$167$8_0$158
                                   2255 ;main.c:167: ceiling_coll = 1;
      00053C 21rD1r01              2256 	ld	hl, #_ceiling_coll
      00053F 36 01                 2257 	ld	(hl), #0x01
      000541 18 17                 2258 	jr	00130$
      000543                       2259 00125$:
                           000543  2260 	C$main.c$169$7_0$157	= .
                                   2261 	.globl	C$main.c$169$7_0$157
                                   2262 ;main.c:169: else if(i = HGT - 1)
      000543 F8 06                 2263 	ldhl	sp,	#6
      000545 36 04                 2264 	ld	(hl), #0x04
      000547 AF                    2265 	xor	a, a
      000548 23                    2266 	inc	hl
      000549 77                    2267 	ld	(hl), a
                           00054A  2268 	C$main.c$171$8_0$159	= .
                                   2269 	.globl	C$main.c$171$8_0$159
                                   2270 ;main.c:171: pY = (y_values[i] << 3) + 8 - (HGT - 3)*8;
      00054A FArD8r01              2271 	ld	a, (#(_y_values + 0x0004) + 0)
      00054D 87                    2272 	add	a, a
      00054E 87                    2273 	add	a, a
      00054F 87                    2274 	add	a, a
      000550 C6 F8                 2275 	add	a, #0xf8
      000552 EArCBr01              2276 	ld	(#_pY),a
                           000555  2277 	C$main.c$172$8_0$159	= .
                                   2278 	.globl	C$main.c$172$8_0$159
                                   2279 ;main.c:172: ground_coll = 1;
      000555 21rD0r01              2280 	ld	hl, #_ground_coll
      000558 36 01                 2281 	ld	(hl), #0x01
      00055A                       2282 00130$:
                           00055A  2283 	C$main.c$178$5_0$152	= .
                                   2284 	.globl	C$main.c$178$5_0$152
                                   2285 ;main.c:178: if(i != 0 && i != HGT - 1)
      00055A F8 07                 2286 	ldhl	sp,	#7
      00055C 3A                    2287 	ld	a, (hl-)
      00055D B6                    2288 	or	a, (hl)
      00055E 28 0E                 2289 	jr	Z, 00144$
      000560 7E                    2290 	ld	a, (hl)
      000561 D6 04                 2291 	sub	a, #0x04
      000563 23                    2292 	inc	hl
      000564 B6                    2293 	or	a, (hl)
      000565 28 07                 2294 	jr	Z, 00144$
                           000567  2295 	C$main.c$180$6_0$160	= .
                                   2296 	.globl	C$main.c$180$6_0$160
                                   2297 ;main.c:180: c = WDT - 1;
      000567 F8 08                 2298 	ldhl	sp,	#8
      000569 36 01                 2299 	ld	(hl), #0x01
      00056B AF                    2300 	xor	a, a
      00056C 23                    2301 	inc	hl
      00056D 77                    2302 	ld	(hl), a
      00056E                       2303 00144$:
                           00056E  2304 	C$main.c$145$4_0$151	= .
                                   2305 	.globl	C$main.c$145$4_0$151
                                   2306 ;main.c:145: for(int c = 0; c < WDT; c++)
      00056E F8 08                 2307 	ldhl	sp,	#8
      000570 34                    2308 	inc	(hl)
      000571 C2r41r04              2309 	jp	NZ,00143$
      000574 23                    2310 	inc	hl
      000575 34                    2311 	inc	(hl)
      000576 C3r41r04              2312 	jp	00143$
      000579                       2313 00147$:
                           000579  2314 	C$main.c$143$2_0$149	= .
                                   2315 	.globl	C$main.c$143$2_0$149
                                   2316 ;main.c:143: for(int i = 0; i < HGT; i++)
      000579 F8 06                 2317 	ldhl	sp,	#6
      00057B 34                    2318 	inc	(hl)
      00057C C2r1Dr04              2319 	jp	NZ,00146$
      00057F 23                    2320 	inc	hl
      000580 34                    2321 	inc	(hl)
      000581 C3r1Dr04              2322 	jp	00146$
      000584                       2323 00135$:
                           000584  2324 	C$main.c$184$1_0$138	= .
                                   2325 	.globl	C$main.c$184$1_0$138
                                   2326 ;main.c:184: return 1;
      000584 11 01 00              2327 	ld	de, #0x0001
                           000587  2328 	C$main.c$185$1_0$138	= .
                                   2329 	.globl	C$main.c$185$1_0$138
                                   2330 ;main.c:185: }
      000587 E8 0A                 2331 	add	sp, #10
                           000589  2332 	C$main.c$185$1_0$138	= .
                                   2333 	.globl	C$main.c$185$1_0$138
                           000589  2334 	XG$collision$0$0	= .
                                   2335 	.globl	XG$collision$0$0
      000589 C9                    2336 	ret
                                   2337 	.area _CODE
                                   2338 	.area _CABS (ABS)
